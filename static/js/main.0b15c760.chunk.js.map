{"version":3,"sources":["lib/ui/View.js","lib/ui/Graphics.js","lib/Midi.js","components/PitchTimeChart.js","types/Note.js","lib/MidiInputManager.js","App.js","index.js"],"names":["View","PureComponent","constructor","props","margin","top","right","bottom","left","rowSpan","columnSpan","canResizeRows","canResizeColumns","super","onResize","increaseRows","this","state","rowlimit","outerHeight","viewSize","newSpan","viewHeight","setState","height","decreaseRows","increaseColumns","columnLimit","outerWidth","viewWidth","width","decreaseColumns","close","toggleView","name","getSizeControlHTML","className","onClick","title","disabled","icon","faArrowsAltV","faLongArrowAltUp","faArrowsAltH","faLongArrowAltLeft","faTimesCircle","resizeComponent","additionalState","ow","oh","drawNoteTrapezoid","ctx","x","y","height2","beginPath","moveTo","lineTo","closePath","fill","MidiNoteByPitch","Map","MidiNoteByLabel","MidiInstrumentByNumber","MidiInstrumentByNumberLev2","getMidiNoteByNr","nr","get","MIDI_NOTES","pitch","octave","label","frequency","MIDI_INSTRUMENTS","number","group","MIDI_INSTRUMENTS_Lev2","subnumber","note","set","instrument","key","PitchTimeChart","componentDidMount","initialize","yAxisLabelType","overviewHeight","svg","select","selectAll","remove","scaleLinear","range","xOv","yOv","xAxis","axisBottom","yAxis","axisLeft","tickFormat","d","Math","floor","xAxisEl","append","attr","call","yAxisEl","text","canvas","dpr","window","devicePixelRatio","rect","getBoundingClientRect","getContext","scale","setupCanvas","initialized","draw","drawNotes","notes","boxHeight","end","veloScale","domain","startPos","start","endPos","xPos","h","velocity","max","_this","time","showAllTime","allNotes","midiLiveData","clearRect","xDomain","extent","low","high","separatedByChannels","Array","from","channel","map","colors","schemeCategory10","boxHeight2","forEach","tr","i","fillStyle","length","fillRect","clipLeftRight","requestAnimationFrame","liveNotes","componentDidUpdate","render","style","gridArea","ref","n","transform","onChange","e","target","value","faToggleOn","faToggleOff","Note","object","undefined","console","error","clone","getDuration","getName","getLetter","getOctave","shiftTime","addedSeconds","scaleTime","factor","equals","otherNote","MidiInputManager","getMidiLiveData","setMidiLiveData","addCurrentNote","removeCurrentNote","_onMIDISuccess","midiAccess","groupCollapsed","inputs","size","input","values","log","onmidimessage","_handleMIDIMessage","groupEnd","message","device","commandAndChannel","data","command","timeStamp","_noteOff","_noteOn","navigator","requestMIDIAccess","then","_onMIDIFailure","alert","midiData","concat","setTimeout","index","warn","App","Component","innerWidth","innerHeight","newMap","currentNotes","delete","addEventListener","s","href","faGithub","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0b15c760.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowsAltH, faArrowsAltV, faLongArrowAltLeft, faLongArrowAltUp, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\n\nexport default class View extends PureComponent {\n\n    /**\n     * @param {Props} props props\n     * @param {Obbject} margin margin\n     * @param {number} rowSpan number of rows this view initially has\n     * @param {number} colSpan number of columns this view initially has\n     * @param {boolean} canResizeRows allow to resize rows?\n     * @param {boolean} canResizeColumns allow to resize columns?\n     */\n    constructor(\n        props,\n        margin = { top: 0, right: 0, bottom: 0, left: 0 },\n        rowSpan = 1,\n        columnSpan = 1,\n        canResizeRows = true,\n        canResizeColumns = true,\n    ) {\n        super(props);\n        const { outerWidth, outerHeight } = props.viewSize;\n        const viewWidth = outerWidth * columnSpan;\n        const viewHeight = outerHeight * rowSpan;\n        this.state = {\n            rowSpan,\n            columnSpan,\n            canResizeRows,\n            canResizeColumns,\n            rowlimit: 12,\n            columnLimit: 2,\n            outerWidth,\n            outerHeight,\n            viewHeight,\n            viewWidth,\n            margin,\n            width: (outerWidth * columnSpan) - margin.left - margin.right,\n            height: (outerHeight * rowSpan) - margin.top - margin.bottom,\n        };\n    }\n\n    /**\n     * Views shoud overwrite this method,\n     * to react to resizing.\n     * This method is called by resizeComponent (see below).\n     */\n    onResize = () => { }\n\n    /**\n     * Resizes the component by updating the width and height depending on\n     * the received outerWidth and outerHeight props and the internal margin.\n     * After updating the state, the callback function will be called.\n     * @param {Object} component\n     * @param {Function} callback\n     * @param {Object} additionalState other properties to set in the state\n     */\n    resizeComponent(additionalState = {}) {\n        const { outerWidth, outerHeight } = this.props.viewSize;\n        const { outerWidth: ow, outerHeight: oh, margin, rowSpan, columnSpan } = this.state;\n        if (ow !== outerWidth || oh !== outerHeight) {\n            const viewWidth = outerWidth * columnSpan;\n            const viewHeight = outerHeight * rowSpan;\n            this.setState(\n                {\n                    ...additionalState,\n                    outerWidth,\n                    outerHeight,\n                    viewWidth,\n                    viewHeight,\n                    width: (outerWidth * columnSpan) - margin.left - margin.right,\n                    height: (outerHeight * rowSpan) - margin.top - margin.bottom,\n                },\n                this.onResize\n            );\n        }\n    }\n\n    increaseRows = () => {\n        const { rowSpan, rowlimit, margin, canResizeRows } = this.state;\n        const { outerHeight } = this.props.viewSize;\n        if (!canResizeRows) { return; }\n        if (rowSpan >= rowlimit) { return; }\n        const newSpan = rowSpan + 1;\n        const viewHeight = outerHeight * newSpan;\n        this.setState(\n            {\n                rowSpan: newSpan,\n                viewHeight,\n                height: viewHeight - margin.top - margin.bottom\n            },\n            this.onResize\n        );\n    }\n\n    decreaseRows = () => {\n        const { rowSpan, margin, canResizeRows } = this.state;\n        const { outerHeight } = this.props.viewSize;\n        if (!canResizeRows) { return; }\n        if (rowSpan <= 1) { return; }\n        const newSpan = rowSpan - 1;\n        const viewHeight = outerHeight * newSpan;\n        this.setState(\n            {\n                rowSpan: newSpan,\n                viewHeight,\n                height: viewHeight - margin.top - margin.bottom\n            },\n            this.onResize\n        );\n    }\n\n    increaseColumns = () => {\n        const { columnSpan, columnLimit, margin, canResizeColumns } = this.state;\n        const { outerWidth } = this.props.viewSize;\n        if (!canResizeColumns) { return; }\n        if (columnSpan >= columnLimit) { return; }\n        const newSpan = columnSpan + 1;\n        const viewWidth = outerWidth * newSpan;\n        this.setState(\n            {\n                columnSpan: newSpan,\n                viewWidth,\n                width: viewWidth - margin.left - margin.right\n            },\n            this.onResize\n        );\n    }\n\n    decreaseColumns = () => {\n        const { columnSpan, margin, canResizeColumns } = this.state;\n        const { outerWidth } = this.props.viewSize;\n        if (!canResizeColumns) { return; }\n        if (columnSpan <= 1) { return; }\n        const newSpan = columnSpan - 1;\n        const viewWidth = outerWidth * newSpan;\n        this.setState(\n            {\n                columnSpan: newSpan,\n                viewWidth,\n                width: viewWidth - margin.left - margin.right\n            },\n            this.onResize\n        );\n    }\n\n    close = () => {\n        const { toggleView, name } = this.props;\n        if (toggleView && name) {\n            toggleView(name);\n        }\n    }\n\n    /**\n     * Returns the HTML (JSX) for the view size control buttons\n     */\n    getSizeControlHTML = () => (\n        <div className='sizeControl'>\n            {this.state.canResizeRows && (\n                <span>\n                    <button\n                        onClick={this.increaseRows\n                        }\n                        title={'Increase rows'}\n                        disabled={this.state.rowSpan >= this.state.rowlimit}\n                    >\n                        <FontAwesomeIcon icon={faArrowsAltV} />\n                    </button >\n                    <button\n                        onClick={this.decreaseRows}\n                        title={'Decrease rows'}\n                        disabled={this.state.rowSpan <= 1}\n                    >\n                        <FontAwesomeIcon icon={faLongArrowAltUp} />\n                    </button>\n                </span>\n            )}\n            {this.state.canResizeColumns && (\n                <span>\n                    <button\n                        onClick={this.increaseColumns}\n                        title={'Increase columns'}\n                        disabled={this.state.columnSpan >= this.state.columnLimit}\n                    >\n                        <FontAwesomeIcon icon={faArrowsAltH} />\n                    </button>\n                    <button\n                        onClick={this.decreaseColumns}\n                        title={'Decrease columns'}\n                        disabled={this.state.columnSpan <= 1}\n                    >\n                        <FontAwesomeIcon icon={faLongArrowAltLeft} />\n                    </button>\n                </span>\n            )}\n            <button\n                onClick={this.close}\n                title={'Close'}\n            >\n                <FontAwesomeIcon icon={faTimesCircle} />\n            </button>\n        </div >\n    );\n}\n","import { getBoxplotCharacteristics, kernelEpanechnikov, kernelDensityEstimator } from \"../utils/StatisticsUtils\";\nimport { curveMonotoneX, curveLinear, line } from \"d3-shape\";\nimport { scaleLinear } from \"d3-scale\";\nimport { extent, max } from \"d3-array\";\n\n\n/**\n * Sets up a canvas rescaled to device pixel ratio\n * From https://www.html5rocks.com/en/tutorials/canvas/hidpi/\n * @param {HTMLCanvasElement} canvas canvas element\n * @returns {CanvasRenderingContext2D} canvas rendering context\n */\nexport function setupCanvas(canvas) {\n    // Get the device pixel ratio, falling back to 1.\n    var dpr = window.devicePixelRatio || 1;\n    // Get the size of the canvas in CSS pixels.\n    var rect = canvas.getBoundingClientRect();\n    // Give the canvas pixel dimensions of their CSS\n    // Size times the device pixel ratio.\n    canvas.width = rect.width * dpr;\n    canvas.height = rect.height * dpr;\n    var ctx = canvas.getContext('2d');\n    // Scale all drawing operations by the dpr, so you\n    // don't have to worry about the difference.\n    ctx.scale(dpr, dpr);\n    return ctx;\n}\n\n\n/**\n * Draws horizontal bands with alternating color to better distinguish rows.\n * @param {CanvasRenderingContext2D} ctx canvas rendering context\n * @param {number} rowHeight height of bnote boxes\n */\nexport function drawRowBands(ctx, margin, rows, rowHeight, width, fillStyle = 'rgba(128, 128, 128, 0.1)') {\n    const oldFill = ctx.fillStyle;\n    ctx.fillStyle = fillStyle;\n    const xPos = margin.left;\n    for (let i = 0; i < rows; i += 2) {\n        const yPos = margin.top + rowHeight * i;\n        ctx.fillRect(xPos, yPos, width, rowHeight);\n    }\n    ctx.fillStyle = oldFill;\n}\n\n/**\n * Draws a bar chart.\n * @param {CanvasRenderingContext2D} ctx canvas context\n * @param {number} x x position\n * @param {number} y y position\n * @param {number} width width\n * @param {number} height height\n * @param {number} maxVal maximum value towards the chart values are scaled\n * @param {number[]} values values to draw bars for\n * @param {string[]} colors color for each value entry\n */\nexport function drawBarChart(ctx, x, y, width, height, maxVal, values, colors) {\n    const w = width / values.length;\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        ctx.fillStyle = colors[i];\n        const h = (value / maxVal) * height;\n        const yPos = y + height - h;\n        ctx.fillRect(x + i * w, yPos, w - 2, h);\n    }\n}\n\n/**\n * Draws a stacked bar chart.\n * @param {CanvasRenderingContext2D} ctx canvas context\n * @param {number} x x position\n * @param {number} y y position\n * @param {number} width width\n * @param {number} height height\n * @param {number} maxVal maximum value towards the chart values are scaled\n * @param {number[]} values values to draw bars for\n * @param {string[]} colors color for each value entry\n */\nexport function drawStackedBarChart(ctx, x, y, width, height, maxVal, values, colors) {\n    let currentSum = 0;\n    // Stack values\n    for (let i = values.length - 1; i >= 0; i--) {\n        currentSum += values[i];\n        values[i] = currentSum;\n    }\n    for (let i = 0; i < values.length; i++) {\n        const val = values[i];\n        ctx.fillStyle = colors[i];\n        const h = (val / maxVal) * height;\n        const yPos = y + height - h;\n        ctx.fillRect(x, yPos, width, h);\n    }\n}\n\n/**\n * Draws a horizontal boxplot onto a canvas.\n * @param {CanvasRenderingContext2D} ctx canvas rendering context\n * @param {Object} margin width {top, right, left, bottom}\n * @param {Function} x D3 linear scale\n * @param {number} yPos y position\n * @param {number} plotHeight height of the plot\n * @param {number[]} data array of numbers to draw the boxplot for\n * @param {boolean} drawOutliers if true, outliers will be drawn as dots\n * @param {string} fillBox color for the box\n * @param {string} fillWhisk color for the whiskers\n */\nexport function drawBoxplot(\n    ctx,\n    margin,\n    x,\n    yPos,\n    plotHeight,\n    data,\n    drawOutliers = false,\n    fillBox = 'rgba(70, 130, 180, 0.8)',\n    fillWhisk = 'steelblue'\n) {\n    const { q1, q2, q3, r0, r1 } = getBoxplotCharacteristics(data);\n    // Get positions\n    const q1Pos = margin.left + x(q1);\n    const q2Pos = margin.left + x(q2);\n    const q3Pos = margin.left + x(q3);\n    const r0Pos = margin.left + x(r0);\n    const r1Pos = margin.left + x(r1);\n    const yCenter = yPos + plotHeight / 2;\n    // Box (with a gap for the median)\n    ctx.fillStyle = fillBox;\n    ctx.fillRect(q1Pos, yPos, q2Pos - q1Pos - 1, plotHeight);\n    ctx.fillRect(q2Pos + 1, yPos, q3Pos - q2Pos - 1, plotHeight);\n    ctx.fillStyle = fillWhisk;\n    // Left whisker\n    ctx.fillRect(r0Pos, yPos, 1, plotHeight);\n    ctx.fillRect(r0Pos, yCenter, q1Pos - r0Pos, 1);\n    // Right whisker\n    ctx.fillRect(r1Pos, yPos, 1, plotHeight);\n    ctx.fillRect(q3Pos, yCenter, r1Pos - q3Pos, 1);\n    // Draw outliers\n    if (drawOutliers) {\n        const outliers = data.filter(d => d < r0 || d > r1);\n        for (let ol of outliers) {\n            ctx.fillRect(margin.left + x(ol), yCenter, 2, 2);\n        }\n    }\n}\n\n/**\n * Draws a kernel density estimation (KDE) area chart for each pitch.\n * TODO: draw mean and quartiles like in a box plot\n * @param {CanvasRenderingContext2D} ctx canvas rendering context\n * @param {Object} margin width {top, right, left, bottom}\n * @param {Function} x D3 linear scale\n * @param {number} yPos y position\n * @param {number} plotHeight height of the plot\n * @param {number[]} data array of numbers to draw the boxplot for\n * @param {boolean} smooth turn smoothing on and off\n * @param {string} fillStyle fill color\n * @param {number} bandwidth kernel bandwidth\n * @param {number} ticks number of ticks for which to compute a curve point\n */\nexport function drawKdeAreaChart(ctx, margin, x, yPos, plotHeight, data, smooth = true, fillStyle, bandwidth = 0.5, ticks = 100) {\n    const kde = kernelDensityEstimator(kernelEpanechnikov(bandwidth), x.ticks(ticks));\n    const estimate = kde(data);\n    // Force 0 for y value at start and end for correct drawing\n    estimate.unshift([estimate[0][0], 0]);\n    estimate.push([estimate[estimate.length - 1][0], 0]);\n    const y = scaleLinear()\n        .domain(extent(estimate, d => d[1]))\n        .range([yPos + plotHeight, yPos]);\n    // Smoothed or linearly interpolated area\n    const lineGenerator = line()\n        .x(d => margin.left + x(d[0]))\n        .y(d => y(d[1]))\n        .curve(smooth ? curveMonotoneX : curveLinear)\n        .context(ctx);\n    ctx.beginPath();\n    lineGenerator(estimate);\n    ctx.closePath();\n    ctx.fillStyle = fillStyle;\n    ctx.fill();\n}\n\n/**\n * Draws a violinplot (a mirrored KDE area chart).\n * TODO: draw mean and quartiles like in a box plot\n * @param {CanvasRenderingContext2D} ctx canvas rendering context\n * @param {Object} margin width {top, right, left, bottom}\n * @param {Function} x D3 linear scale\n * @param {number} yPos y position\n * @param {number} plotHeight height of the plot\n * @param {number[]} data array of numbers to draw the boxplot for\n * @param {boolean} smooth turn smoothing on and off\n * @param {string} fillStyle fill color\n * @param {number} bandwidth kernel bandwidth\n * @param {number} ticks number of ticks for which to compute a curve point\n */\nexport function drawViolinPlot(ctx, margin, x, yPos, plotHeight, data, smooth = true, fillStyle, bandwidth = 0.5, ticks = 100) {\n    const kde = kernelDensityEstimator(kernelEpanechnikov(bandwidth), x.ticks(ticks));\n    const estimate = kde(data);\n    // Force 0 for y value at start and end for correct drawing\n    estimate.unshift([estimate[0][0], 0]);\n    estimate.push([estimate[estimate.length - 1][0], 0]);\n    const maxEst = max(estimate, d => d[1]);\n    const y = scaleLinear()\n        .domain([-maxEst, maxEst])\n        .range([yPos + plotHeight, yPos]);\n    // Smoothed or linearly interpolated area\n    const lineGeneratorTop = line()\n        .x(d => margin.left + x(d[0]))\n        .y(d => y(d[1]))\n        .curve(smooth ? curveMonotoneX : curveLinear)\n        .context(ctx);\n    const lineGeneratorBottom = line()\n        .x(d => margin.left + x(d[0]))\n        .y(d => y(-d[1]))\n        .curve(smooth ? curveMonotoneX : curveLinear)\n        .context(ctx);\n    ctx.fillStyle = fillStyle;\n    ctx.beginPath();\n    lineGeneratorTop(estimate);\n    ctx.closePath();\n    ctx.fill();\n    ctx.beginPath();\n    lineGeneratorBottom(estimate);\n    ctx.closePath();\n    ctx.fill();\n}\n\n\n/**\n  * Draws a drum note shape to the canvas.\n  * @param {CanvasRenderingContext2D} ctx canvas context\n  * @param {string} shape one of [triangle, <>, x, o, ostroke, xstroke]\n  * @param {number} x x position\n  * @param {number} y y position\n  * @param {number} size size (width and height of the symbols outer bounds)\n  */\nexport function drawDrumNoteShape(ctx, shape, x, y, size) {\n    const halfSize = size * 0.4;\n    switch (shape) {\n        case 'triangle':\n            drawTriangle(ctx, x, y, halfSize);\n            break;\n        case '<>':\n            drawDiamond(ctx, x, y, halfSize);\n            break;\n        case 'x':\n            drawX(ctx, x, y, halfSize);\n            break;\n        case 'o':\n            drawFilledCircle(ctx, x, y, halfSize);\n            break;\n        case 'ostroke':\n            drawFilledCircle(ctx, x, y, halfSize);\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            ctx.moveTo(x - halfSize, y - halfSize);\n            ctx.lineTo(x + halfSize, y + halfSize);\n            ctx.stroke();\n            ctx.lineWidth = 1;\n            break;\n        case 'xstroke':\n            drawX(ctx, x, y, halfSize);\n            ctx.lineWidth = 3;\n            ctx.beginPath();\n            ctx.moveTo(x - halfSize, y);\n            ctx.lineTo(x + halfSize, y);\n            ctx.stroke();\n            ctx.lineWidth = 1;\n            break;\n        default:\n            console.warn(`Unsupported shape ${shape}`);\n    }\n}\n\n/**\n * Draws a stroked circle.\n * @param {CanvasRenderingContext2D} ctx canvas rendering context\n * @param {number} x x coordinate of center\n * @param {number} y y coordinate of center\n * @param {number} radius radius\n */\nexport function drawCircle(ctx, x, y, radius) {\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, 2 * Math.PI);\n    ctx.stroke();\n}\n\n/**\n * Draws a filled circle.\n * @param {CanvasRenderingContext2D} ctx canvas rendering context\n * @param {number} x x coordinate of center\n * @param {number} y y coordinate of center\n * @param {number} radius radius\n */\nexport function drawFilledCircle(ctx, x, y, radius) {\n    if (radius < 0) {\n        console.error(`Cannot draw circle with negative radius of ${radius}`);\n    }\n    ctx.beginPath();\n    ctx.arc(x, y, radius, 0, 2 * Math.PI);\n    ctx.fill();\n}\n\n/**\n * Draws a filled triangle like this: /\\\n * @param {CanvasRenderingContext2D} ctx canvas rendering context\n * @param {number} x x coordinate of center\n * @param {number} y y coordinate of center\n * @param {number} halfSize half of the size\n */\nexport function drawTriangle(ctx, x, y, halfSize) {\n    ctx.beginPath();\n    ctx.moveTo(x - halfSize, y + halfSize);\n    ctx.lineTo(x + halfSize, y + halfSize);\n    ctx.lineTo(x, y - halfSize);\n    ctx.closePath();\n    ctx.fill();\n}\n\n/**\n * Draws a diamond like this: <>\n * @param {CanvasRenderingContext2D} ctx canvas rendering context\n * @param {number} x x coordinate of center\n * @param {number} y y coordinate of center\n * @param {number} halfSize half of the size\n */\nexport function drawDiamond(ctx, x, y, halfSize) {\n    ctx.beginPath();\n    ctx.moveTo(x - halfSize, y);\n    ctx.lineTo(x, y - halfSize);\n    ctx.lineTo(x + halfSize, y);\n    ctx.lineTo(x, y + halfSize);\n    ctx.closePath();\n    ctx.fill();\n}\n\n/**\n * Draws an X\n * @param {CanvasRenderingContext2D} ctx canvas rendering context\n * @param {number} x x coordinate of center\n * @param {number} y y coordinate of center\n * @param {number} halfSize half of the size\n */\nexport function drawX(ctx, x, y, halfSize) {\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    ctx.moveTo(x - halfSize, y - halfSize);\n    ctx.lineTo(x + halfSize, y + halfSize);\n    ctx.moveTo(x - halfSize, y + halfSize);\n    ctx.lineTo(x + halfSize, y - halfSize);\n    ctx.stroke();\n    ctx.lineWidth = 1;\n}\n\n/**\n * Draws a trapezoid that looks like a rectangle but gets narrower at the right\n * end, so better show where one ends and the next begins.\n * @param {CanvasRenderingContext2D} ctx canvas rendering context\n * @param {number} x x coordinate of top left\n * @param {number} y y coordinate of top left\n * @param {number} width width\n * @param {number} height height (of left side)\n * @param {number} height2 height (of right side)\n */\nexport function drawNoteTrapezoid(ctx, x, y, width, height, height2) {\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.lineTo(x, y + height);\n    ctx.lineTo(x + width, y + (height / 2 + height2 / 2));\n    ctx.lineTo(x + width, y + (height / 2 - height2 / 2));\n    ctx.closePath();\n    ctx.fill();\n}\n\n/**\n * Draws a trapezoid that looks like a rectangle but gets narrower at the top\n * end, so better show where one ends and the next begins.\n * @param {CanvasRenderingContext2D} ctx canvas rendering context\n * @param {number} x x coordinate of bounding rect's top left\n * @param {number} y y coordinate of bounding rect's top left\n * @param {number} width width (of bounding rect / bottom side)\n * @param {number} height height\n * @param {number} width2 width (of top side)\n */\nexport function drawNoteTrapezoidUpwards(ctx, x, y, width, height, width2) {\n    ctx.beginPath();\n    ctx.lineTo(x, y + height);\n    ctx.lineTo(x + width, y + height);\n    ctx.lineTo(x + (width / 2 + width2 / 2), y);\n    ctx.lineTo(x + (width / 2 - width2 / 2), y);\n    ctx.closePath();\n    ctx.fill();\n}\n\n/**\n * Draws an arc that connects similar parts.\n * Both parts must have the same width in pixels.\n * @param {CanvasRenderingContext2D} ctx canvas rendering context\n * @param {number} startX1 x coordinate of the start of the first part\n * @param {number} startX2 x coordinate of the start of the second part\n * @param {number} length length in pixels of the parts\n * @param {number} yBottom bottom baseline y coordinate\n */\nexport function drawArc(ctx, startX1, startX2, length, yBottom) {\n    // Get center and radius\n    const radius = (startX2 - startX1) / 2;\n    const cx = startX1 + radius + length / 2;\n    ctx.lineWidth = length;\n    ctx.beginPath();\n    ctx.arc(cx, yBottom, radius, Math.PI, 2 * Math.PI);\n    ctx.stroke();\n}\n\n/**\n * Draws a more complex path and fills it.\n * Two arcs: One from startX1 to endX2 on the top, one from endX1 to startX2\n * below it.\n * @param {CanvasRenderingContext2D} ctx canvas rendering context\n * @param {number} startX1 x coordinate of the start of the first part\n * @param {number} endX1 x coordinate of the end of the first part\n * @param {number} startX2 x coordinate of the start of the second part\n * @param {number} endX2 x coordinate of the end of the second part\n * @param {number} endX2 x coordinate of the end of the second part\n * @param {number} yBottom bottom baseline y coordinate\n */\nexport function drawAssymetricArc(ctx, startX1, endX1, startX2, endX2, yBottom) {\n    // Get center and radius\n    const radiusTop = (endX2 - startX1) / 2;\n    if (radiusTop < 0) {\n        return;\n    }\n    let radiusBottom = (startX2 - endX1) / 2;\n    if (radiusBottom < 0) {\n        radiusBottom = 0;\n    }\n    const cxTop = startX1 + radiusTop;\n    const cxBottom = endX1 + radiusBottom;\n    ctx.beginPath();\n    ctx.moveTo(startX1, yBottom);\n    ctx.arc(cxTop, yBottom, radiusTop, Math.PI, 2 * Math.PI);\n    ctx.lineTo(startX2, yBottom);\n    ctx.arc(cxBottom, yBottom, radiusBottom, 2 * Math.PI, Math.PI, true);\n    ctx.closePath();\n    ctx.fill();\n}\n\n/**\n * Draws a line indicating the current player time\n * @param {number} currentPlayerTime current player time in seconds\n * @param {Function} x D3 scaleLinear for x axis\n */\nexport function drawCurrentTimeIndicator(ctx, currentPlayerTime, x, height, margin) {\n    if (currentPlayerTime === null) {\n        return;\n    }\n    const xPos = margin.left + x(currentPlayerTime) - 1;\n    ctx.fillRect(xPos, margin.top, 2, height);\n}\n\n/**\n * Clips left and right of a visualization by clearing parts of the canvas.\n * @param {CanvasRenderingContext2D} ctx canvas rendering context\n * @param {Object} margin {top, right, bottom, left}\n * @param {number} width width of the area to clip around\n * @param {number} height height of the clipping area\n */\nexport function clipLeftRight(ctx, margin, width, height) {\n    ctx.clearRect(0, margin.top, margin.left, height);\n    ctx.clearRect(margin.left + width, margin.top, margin.right, height);\n}\n\n/**\n * Draws measure lines and tempo and beat type information\n * @param {CanvasRenderingContext2D} ctx canvas rendering context\n * @param {Object} parsedXml parsed MusicXML data\n * @param {Object} margin {top, right, bottom, left}\n * @param {number} width width\n * @param {number} height height\n * @param {Function} x D3 linear scale\n */\nexport function drawMusicXmlInformation(ctx, parsedXml, margin, width, height, x) {\n    // Draw measure lines\n    ctx.fillStyle = 'rgba(128, 128, 128, 0.5)';\n    for (let i = 0; i < parsedXml.measureLinePositions.length; i++) {\n        const line = parsedXml.measureLinePositions[i];\n        const xPos = x(line);\n        // Do not draw invisible lines\n        if (xPos < 0) { continue; }\n        if (xPos > width) { break; }\n        const pos = margin.left + xPos;\n        ctx.fillRect(pos, margin.top, 2, height);\n        // Draw measure number\n        if ((i + 2) % 4 === 0) {\n            ctx.fillStyle = '#888';\n            ctx.fillText(i + 2, pos + 10, margin.top);\n            ctx.fillStyle = 'rgba(128, 128, 128, 0.5)';\n        }\n    }\n    const xOffs = margin.left + 15;\n    ctx.fillStyle = '#888';\n    // Draw tempo changes\n    for (let t of parsedXml.tempoChanges) {\n        ctx.fillText(`${t.tempo} bpm`, xOffs + x(t.time), margin.top - 20);\n    }\n    // Draw beatType changes\n    for (let b of parsedXml.beatTypeChanges) {\n        ctx.fillText(`${b.beats} / ${b.beatType}`, xOffs + x(b.time), margin.top - 8);\n    }\n}\n","/**\n * Lookup for many MIDI specifications.\n * Information from: https://soundprogramming.net/file-formats/\n */\n\n\nconst MidiNoteByPitch = new Map();\nconst MidiNoteByLabel = new Map();\nconst MidiInstrumentByNumber = new Map();\nconst MidiInstrumentByNumberLev2 = new Map();\n\n/**\n * Returns information on the MIDI note with the specified number.\n * @param {number} nr MIDI note number in [0, 127]\n * @returns {Object} note info, e.g.\n *      { pitch: 69, name: 'A', octave: 4, label: 'A4', frequency: 440.000 }\n */\nexport function getMidiNoteByNr(nr) {\n    return MidiNoteByPitch.get(nr);\n}\n\n/**\n * Returns information on the MIDI note with the specified label.\n * @param {string} label note label, e.g. 'D#0'\n *      (upper-case and sharp notation necessary)\n * @returns {Object} note info, e.g.\n *      { pitch: 69, name: 'A', octave: 4, label: 'A4', frequency: 440.000 }\n */\nexport function getMidiNoteByLabel(label) {\n    return MidiNoteByLabel.get(label);\n}\n\n/**\n * Returns information on the MIDI note with the specified name and octave.\n * @param {string} name note name, e.g. 'D#'\n *      (upper-case and sharp notation necessary)\n * @param {number} octave octave in [-1, 9]\n * @returns {Object} note info, e.g.\n *      { pitch: 69, name: 'A', octave: 4, label: 'A4', frequency: 440.000 }\n */\nexport function getMidiNoteByNameAndOctave(name, octave) {\n    return MidiNoteByLabel.get(`${name}${octave}`);\n}\n\n/**\n * Returns information on the MIDI instrument with the specified number.\n * @param {number} nr MIDI instrument number in [0, 127]\n * @returns {Object} note info, e.g.\n *      { number: 0, group: 'Piano', label: 'Acoustic Grand Piano' }\n */\nexport function getMidiInstrumentByNr(nr) {\n    return MidiInstrumentByNumber.get(nr);\n}\n\n/**\n * Returns information on the MIDI instrument (MIDI level 2) with the\n * specified number.\n * @param {number} nr MIDI instrument number in [0, 127]\n * @param {number} nr MIDI instrument number in [0, 127]\n * @returns {Object} note info, e.g.\n *      { number: 0, group: 'Piano', label: 'Acoustic Grand Piano' }\n */\nexport function getMidiInstrumentByNrL2(nr, subNr) {\n    const key = `${nr}-${subNr}`;\n    return MidiInstrumentByNumberLev2.get(key);\n}\n\n/**\n * Returns information on the MIDI instrument with the specified number.\n * @param {number} nr MIDI drum note number in [27, 87]\n * @returns {string} note name, e.g. 'Bass Drum 1\n */\nexport function getMidiDrumNoteByNr(nr) {\n    return GENERAL_MIDI_DRUM_NOTE_NUMBERS.get(nr);\n}\n\n/**\n * Returns true if a given MIDI pitch refers to a sharp note.\n * @param {number} nr MIDI note number in [0, 127]\n * @returns {boolean} true if sharp, false otherwise\n */\nexport function isSharp(nr) {\n    return SHARPS.has(nr);\n}\n\n/**\n * Returns a note name such as 'C#' (without octave) for a given MIDI\n * note number.\n * @param {number} nr MIDI note number in [0, 127]\n * @returns {string} note name such as 'C#'\n */\nexport function getNoteNameFromNoteNr(nr) {\n    return NOTE_NAMES[nr % 12];\n}\n\n\n\n/**\n * Below here are only arrays with information and lookup-map-building code\n */\n\nexport const NOTE_NAMES = [\n    'C',\n    'C#',\n    'D',\n    'D#',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'G#',\n    'A',\n    'A#',\n    'B',\n];\n\nconst MIDI_NOTES = [\n    { pitch: 0, name: 'C', octave: -1, label: 'C-1', frequency: 8.176 },\n    { pitch: 1, name: 'C#', octave: -1, label: 'C#-1', frequency: 8.662 },\n    { pitch: 2, name: 'D', octave: -1, label: 'D-1', frequency: 9.177 },\n    { pitch: 3, name: 'D#', octave: -1, label: 'D#-1', frequency: 9.723 },\n    { pitch: 4, name: 'E', octave: -1, label: 'E-1', frequency: 10.301 },\n    { pitch: 5, name: 'F', octave: -1, label: 'F-1', frequency: 10.913 },\n    { pitch: 6, name: 'F#', octave: -1, label: 'F#-1', frequency: 11.562 },\n    { pitch: 7, name: 'G', octave: -1, label: 'G-1', frequency: 12.250 },\n    { pitch: 8, name: 'G#', octave: -1, label: 'G#-1', frequency: 12.978 },\n    { pitch: 9, name: 'A', octave: -1, label: 'A-1', frequency: 13.750 },\n    { pitch: 10, name: 'A#', octave: -1, label: 'A#-1', frequency: 14.568 },\n    { pitch: 11, name: 'B', octave: -1, label: 'B-1', frequency: 15.434 },\n    { pitch: 12, name: 'C', octave: 0, label: 'C0', frequency: 16.352 },\n    { pitch: 13, name: 'C#', octave: 0, label: 'C#0', frequency: 17.324 },\n    { pitch: 14, name: 'D', octave: 0, label: 'D0', frequency: 18.354 },\n    { pitch: 15, name: 'D#', octave: 0, label: 'D#0', frequency: 19.445 },\n    { pitch: 16, name: 'E', octave: 0, label: 'E0', frequency: 20.602 },\n    { pitch: 17, name: 'F', octave: 0, label: 'F0', frequency: 21.827 },\n    { pitch: 18, name: 'F#', octave: 0, label: 'F#0', frequency: 23.125 },\n    { pitch: 19, name: 'G', octave: 0, label: 'G0', frequency: 24.500 },\n    { pitch: 20, name: 'G#', octave: 0, label: 'G#0', frequency: 25.957 },\n    { pitch: 21, name: 'A', octave: 0, label: 'A0', frequency: 27.500 },\n    { pitch: 22, name: 'A#', octave: 0, label: 'A#0', frequency: 29.135 },\n    { pitch: 23, name: 'B', octave: 0, label: 'B0', frequency: 30.868 },\n    { pitch: 24, name: 'C', octave: 1, label: 'C1', frequency: 32.703 },\n    { pitch: 25, name: 'C#', octave: 1, label: 'C#1', frequency: 34.648 },\n    { pitch: 26, name: 'D', octave: 1, label: 'D1', frequency: 36.708 },\n    { pitch: 27, name: 'D#', octave: 1, label: 'D#1', frequency: 38.891 },\n    { pitch: 28, name: 'E', octave: 1, label: 'E1', frequency: 41.203 },\n    { pitch: 29, name: 'F', octave: 1, label: 'F1', frequency: 43.654 },\n    { pitch: 30, name: 'F#', octave: 1, label: 'F#1', frequency: 46.249 },\n    { pitch: 31, name: 'G', octave: 1, label: 'G1', frequency: 48.999 },\n    { pitch: 32, name: 'G#', octave: 1, label: 'G#1', frequency: 51.913 },\n    { pitch: 33, name: 'A', octave: 1, label: 'A1', frequency: 55.000 },\n    { pitch: 34, name: 'A#', octave: 1, label: 'A#1', frequency: 58.270 },\n    { pitch: 35, name: 'B', octave: 1, label: 'B1', frequency: 61.735 },\n    { pitch: 36, name: 'C', octave: 2, label: 'C2', frequency: 65.406 },\n    { pitch: 37, name: 'C#', octave: 2, label: 'C#2', frequency: 69.296 },\n    { pitch: 38, name: 'D', octave: 2, label: 'D2', frequency: 73.416 },\n    { pitch: 39, name: 'D#', octave: 2, label: 'D#2', frequency: 77.782 },\n    { pitch: 40, name: 'E', octave: 2, label: 'E2', frequency: 82.407 },\n    { pitch: 41, name: 'F', octave: 2, label: 'F2', frequency: 87.307 },\n    { pitch: 42, name: 'F#', octave: 2, label: 'F#2', frequency: 92.499 },\n    { pitch: 43, name: 'G', octave: 2, label: 'G2', frequency: 97.999 },\n    { pitch: 44, name: 'G#', octave: 2, label: 'G#2', frequency: 103.826 },\n    { pitch: 45, name: 'A', octave: 2, label: 'A2', frequency: 110.000 },\n    { pitch: 46, name: 'A#', octave: 2, label: 'A#2', frequency: 116.541 },\n    { pitch: 47, name: 'B', octave: 2, label: 'B2', frequency: 123.471 },\n    { pitch: 48, name: 'C', octave: 3, label: 'C3', frequency: 130.813 },\n    { pitch: 49, name: 'C#', octave: 3, label: 'C#3', frequency: 138.591 },\n    { pitch: 50, name: 'D', octave: 3, label: 'D3', frequency: 146.832 },\n    { pitch: 51, name: 'D#', octave: 3, label: 'D#3', frequency: 155.563 },\n    { pitch: 52, name: 'E', octave: 3, label: 'E3', frequency: 164.814 },\n    { pitch: 53, name: 'F', octave: 3, label: 'F3', frequency: 174.614 },\n    { pitch: 54, name: 'F#', octave: 3, label: 'F#3', frequency: 184.997 },\n    { pitch: 55, name: 'G', octave: 3, label: 'G3', frequency: 195.998 },\n    { pitch: 56, name: 'G#', octave: 3, label: 'G#3', frequency: 207.652 },\n    { pitch: 57, name: 'A', octave: 3, label: 'A3', frequency: 220.000 },\n    { pitch: 58, name: 'A#', octave: 3, label: 'A#3', frequency: 233.082 },\n    { pitch: 59, name: 'B', octave: 3, label: 'B3', frequency: 246.942 },\n    { pitch: 60, name: 'C', octave: 4, label: 'C4', frequency: 261.626 },\n    { pitch: 61, name: 'C#', octave: 4, label: 'C#4', frequency: 277.183 },\n    { pitch: 62, name: 'D', octave: 4, label: 'D4', frequency: 293.665 },\n    { pitch: 63, name: 'D#', octave: 4, label: 'D#4', frequency: 311.127 },\n    { pitch: 64, name: 'E', octave: 4, label: 'E4', frequency: 329.628 },\n    { pitch: 65, name: 'F', octave: 4, label: 'F4', frequency: 349.228 },\n    { pitch: 66, name: 'F#', octave: 4, label: 'F#4', frequency: 369.994 },\n    { pitch: 67, name: 'G', octave: 4, label: 'G4', frequency: 391.995 },\n    { pitch: 68, name: 'G#', octave: 4, label: 'G#4', frequency: 415.305 },\n    { pitch: 69, name: 'A', octave: 4, label: 'A4', frequency: 440.000 },\n    { pitch: 70, name: 'A#', octave: 4, label: 'A#4', frequency: 466.164 },\n    { pitch: 71, name: 'B', octave: 4, label: 'B4', frequency: 493.883 },\n    { pitch: 72, name: 'C', octave: 5, label: 'C5', frequency: 523.251 },\n    { pitch: 73, name: 'C#', octave: 5, label: 'C#5', frequency: 554.365 },\n    { pitch: 74, name: 'D', octave: 5, label: 'D5', frequency: 587.330 },\n    { pitch: 75, name: 'D#', octave: 5, label: 'D#5', frequency: 622.254 },\n    { pitch: 76, name: 'E', octave: 5, label: 'E5', frequency: 659.255 },\n    { pitch: 77, name: 'F', octave: 5, label: 'F5', frequency: 698.456 },\n    { pitch: 78, name: 'F#', octave: 5, label: 'F#5', frequency: 739.989 },\n    { pitch: 79, name: 'G', octave: 5, label: 'G5', frequency: 783.991 },\n    { pitch: 80, name: 'G#', octave: 5, label: 'G#5', frequency: 830.609 },\n    { pitch: 81, name: 'A', octave: 5, label: 'A5', frequency: 880.000 },\n    { pitch: 82, name: 'A#', octave: 5, label: 'A#5', frequency: 932.328 },\n    { pitch: 83, name: 'B', octave: 5, label: 'B5', frequency: 987.767 },\n    { pitch: 84, name: 'C', octave: 6, label: 'C6', frequency: 1046.502 },\n    { pitch: 85, name: 'C#', octave: 6, label: 'C#6', frequency: 1108.731 },\n    { pitch: 86, name: 'D', octave: 6, label: 'D6', frequency: 1174.659 },\n    { pitch: 87, name: 'D#', octave: 6, label: 'D#6', frequency: 1244.508 },\n    { pitch: 88, name: 'E', octave: 6, label: 'E6', frequency: 1318.510 },\n    { pitch: 89, name: 'F', octave: 6, label: 'F6', frequency: 1396.913 },\n    { pitch: 90, name: 'F#', octave: 6, label: 'F#6', frequency: 1479.978 },\n    { pitch: 91, name: 'G', octave: 6, label: 'G6', frequency: 1567.982 },\n    { pitch: 92, name: 'G#', octave: 6, label: 'G#6', frequency: 1661.219 },\n    { pitch: 93, name: 'A', octave: 6, label: 'A6', frequency: 1760.000 },\n    { pitch: 94, name: 'A#', octave: 6, label: 'A#6', frequency: 1864.655 },\n    { pitch: 95, name: 'B', octave: 6, label: 'B6', frequency: 1975.533 },\n    { pitch: 96, name: 'C', octave: 7, label: 'C7', frequency: 2093.005 },\n    { pitch: 97, name: 'C#', octave: 7, label: 'C#7', frequency: 2217.461 },\n    { pitch: 98, name: 'D', octave: 7, label: 'D7', frequency: 2349.318 },\n    { pitch: 99, name: 'D#', octave: 7, label: 'D#7', frequency: 2489.016 },\n    { pitch: 100, name: 'E', octave: 7, label: 'E7', frequency: 2637.020 },\n    { pitch: 101, name: 'F', octave: 7, label: 'F7', frequency: 2793.826 },\n    { pitch: 102, name: 'F#', octave: 7, label: 'F#7', frequency: 2959.955 },\n    { pitch: 103, name: 'G', octave: 7, label: 'G7', frequency: 3135.963 },\n    { pitch: 104, name: 'G#', octave: 7, label: 'G#7', frequency: 3322.438 },\n    { pitch: 105, name: 'A', octave: 7, label: 'A7', frequency: 3520.000 },\n    { pitch: 106, name: 'A#', octave: 7, label: 'A#7', frequency: 3729.310 },\n    { pitch: 107, name: 'B', octave: 7, label: 'B7', frequency: 3951.066 },\n    { pitch: 108, name: 'C', octave: 8, label: 'C8', frequency: 4186.009 },\n    { pitch: 109, name: 'C#', octave: 8, label: 'C#8', frequency: 4434.922 },\n    { pitch: 110, name: 'D', octave: 8, label: 'D8', frequency: 4698.636 },\n    { pitch: 111, name: 'D#', octave: 8, label: 'D#8', frequency: 4978.032 },\n    { pitch: 112, name: 'E', octave: 8, label: 'E8', frequency: 5274.041 },\n    { pitch: 113, name: 'F', octave: 8, label: 'F8', frequency: 5587.652 },\n    { pitch: 114, name: 'F#', octave: 8, label: 'F#8', frequency: 5919.911 },\n    { pitch: 115, name: 'G', octave: 8, label: 'G8', frequency: 6271.927 },\n    { pitch: 116, name: 'G#', octave: 8, label: 'G#8', frequency: 6644.875 },\n    { pitch: 117, name: 'A', octave: 8, label: 'A8', frequency: 7040.000 },\n    { pitch: 118, name: 'A#', octave: 8, label: 'A#8', frequency: 7458.620 },\n    { pitch: 119, name: 'B', octave: 8, label: 'B8', frequency: 7902.133 },\n    { pitch: 120, name: 'C', octave: 9, label: 'C9', frequency: 8372.018 },\n    { pitch: 121, name: 'C#', octave: 9, label: 'C#9', frequency: 8869.844 },\n    { pitch: 122, name: 'D', octave: 9, label: 'D9', frequency: 9397.273 },\n    { pitch: 123, name: 'D#', octave: 9, label: 'D#9', frequency: 9956.063 },\n    { pitch: 124, name: 'E', octave: 9, label: 'E9', frequency: 10548.080 },\n    { pitch: 125, name: 'F', octave: 9, label: 'F9', frequency: 11175.300 },\n    { pitch: 126, name: 'F#', octave: 9, label: 'F#9', frequency: 11839.820 },\n    { pitch: 127, name: 'G', octave: 9, label: 'G9', frequency: 12543.850 },\n];\n\nexport const SHARPS = new Map([\n    [1, null],\n    [3, null],\n    [6, null],\n    [8, null],\n    [10, null],\n    [13, null],\n    [15, null],\n    [18, null],\n    [20, null],\n    [22, null],\n    [25, null],\n    [27, null],\n    [30, null],\n    [32, null],\n    [34, null],\n    [37, null],\n    [39, null],\n    [42, null],\n    [44, null],\n    [46, null],\n    [49, null],\n    [51, null],\n    [54, null],\n    [56, null],\n    [58, null],\n    [61, null],\n    [63, null],\n    [66, null],\n    [68, null],\n    [70, null],\n    [73, null],\n    [75, null],\n    [78, null],\n    [80, null],\n    [82, null],\n    [85, null],\n    [87, null],\n    [90, null],\n    [92, null],\n    [94, null],\n    [97, null],\n    [99, null],\n    [102, null],\n    [104, null],\n    [106, null],\n    [109, null],\n    [111, null],\n    [114, null],\n    [116, null],\n    [118, null],\n    [121, null],\n    [123, null],\n    [126, null]\n]);\n\nconst MIDI_INSTRUMENTS = [\n    { number: 0, group: 'Piano', label: 'Acoustic Grand Piano' },\n    { number: 1, group: 'Piano', label: 'Bright Acoustic Piano' },\n    { number: 2, group: 'Piano', label: 'Electric Grand Piano' },\n    { number: 3, group: 'Piano', label: 'Honky-tonk Piano' },\n    { number: 4, group: 'Piano', label: 'Electric Piano 1' },\n    { number: 5, group: 'Piano', label: 'Electric Piano 2' },\n    { number: 6, group: 'Piano', label: 'Harpsichord' },\n    { number: 7, group: 'Piano', label: 'Clavinet' },\n    { number: 8, group: 'Chromatic Percussion', label: 'Celesta' },\n    { number: 9, group: 'Chromatic Percussion', label: 'Glockenspiel' },\n    { number: 10, group: 'Chromatic Percussion', label: 'Music Box' },\n    { number: 11, group: 'Chromatic Percussion', label: 'Vibraphone' },\n    { number: 12, group: 'Chromatic Percussion', label: 'Marimba' },\n    { number: 13, group: 'Chromatic Percussion', label: 'Xylophone' },\n    { number: 14, group: 'Chromatic Percussion', label: 'Tubular Bells' },\n    { number: 15, group: 'Chromatic Percussion', label: 'Dulcimer' },\n    { number: 16, group: 'Organ', label: 'Drawbar Organ' },\n    { number: 17, group: 'Organ', label: 'Percussive Organ' },\n    { number: 18, group: 'Organ', label: 'Rock Organ' },\n    { number: 19, group: 'Organ', label: 'Church Organ' },\n    { number: 20, group: 'Organ', label: 'Reed Organ' },\n    { number: 21, group: 'Organ', label: 'Accordion' },\n    { number: 22, group: 'Organ', label: 'Harmonica' },\n    { number: 23, group: 'Organ', label: 'Tango Accordion' },\n    { number: 24, group: 'Guitar', label: 'Acoustic Guitar(nylon)' },\n    { number: 25, group: 'Guitar', label: 'Acoustic Guitar(steel)' },\n    { number: 26, group: 'Guitar', label: 'Electric Guitar(jazz)' },\n    { number: 27, group: 'Guitar', label: 'Electric Guitar(clean)' },\n    { number: 28, group: 'Guitar', label: 'Electric Guitar(muted)' },\n    { number: 29, group: 'Guitar', label: 'Overdriven Guitar' },\n    { number: 30, group: 'Guitar', label: 'Distortion Guitar' },\n    { number: 31, group: 'Guitar', label: 'Guitar harmonics' },\n    { number: 32, group: 'Bass', label: 'Acoustic Bass' },\n    { number: 33, group: 'Bass', label: 'Electric Bass(finger)' },\n    { number: 34, group: 'Bass', label: 'Electric Bass(pick)' },\n    { number: 35, group: 'Bass', label: 'Fretless Bass' },\n    { number: 36, group: 'Bass', label: 'Slap Bass 1' },\n    { number: 37, group: 'Bass', label: 'Slap Bass 2' },\n    { number: 38, group: 'Bass', label: 'Synth Bass 1' },\n    { number: 39, group: 'Bass', label: 'Synth Bass 2' },\n    { number: 40, group: 'Strings', label: 'Violin' },\n    { number: 41, group: 'Strings', label: 'Viola' },\n    { number: 42, group: 'Strings', label: 'Cello' },\n    { number: 43, group: 'Strings', label: 'Contrabass' },\n    { number: 44, group: 'Strings', label: 'Tremolo Strings' },\n    { number: 45, group: 'Strings', label: 'Pizzicato Strings' },\n    { number: 46, group: 'Strings', label: 'Orchestral Harp' },\n    { number: 47, group: 'Strings', label: 'Timpani' },\n    { number: 48, group: 'Strings (continued)', label: 'String Ensemble 1' },\n    { number: 49, group: 'Strings (continued)', label: 'String Ensemble 2' },\n    { number: 50, group: 'Strings (continued)', label: 'Synth Strings 1' },\n    { number: 51, group: 'Strings (continued)', label: 'Synth Strings 2' },\n    { number: 52, group: 'Strings (continued)', label: 'Choir Aahs' },\n    { number: 53, group: 'Strings (continued)', label: 'Voice Oohs' },\n    { number: 54, group: 'Strings (continued)', label: 'Synth Voice' },\n    { number: 55, group: 'Strings (continued)', label: 'Orchestra Hit' },\n    { number: 56, group: 'Brass', label: 'Trumpet' },\n    { number: 57, group: 'Brass', label: 'Trombone' },\n    { number: 58, group: 'Brass', label: 'Tuba' },\n    { number: 59, group: 'Brass', label: 'Muted Trumpet' },\n    { number: 60, group: 'Brass', label: 'French Horn' },\n    { number: 61, group: 'Brass', label: 'Brass Section' },\n    { number: 62, group: 'Brass', label: 'Synth Brass 1' },\n    { number: 63, group: 'Brass', label: 'Synth Brass 2' },\n    { number: 64, group: 'Reed', label: 'Soprano Sax' },\n    { number: 65, group: 'Reed', label: 'Alto Sax' },\n    { number: 66, group: 'Reed', label: 'Tenor Sax' },\n    { number: 67, group: 'Reed', label: 'Baritone Sax' },\n    { number: 68, group: 'Reed', label: 'Oboe' },\n    { number: 69, group: 'Reed', label: 'English Horn' },\n    { number: 70, group: 'Reed', label: 'Bassoon' },\n    { number: 71, group: 'Reed', label: 'Clarinet' },\n    { number: 72, group: 'Pipe', label: 'Piccolo' },\n    { number: 73, group: 'Pipe', label: 'Flute' },\n    { number: 74, group: 'Pipe', label: 'Recorder' },\n    { number: 75, group: 'Pipe', label: 'Pan Flute' },\n    { number: 76, group: 'Pipe', label: 'Blown Bottle' },\n    { number: 77, group: 'Pipe', label: 'Shakuhachi' },\n    { number: 78, group: 'Pipe', label: 'Whistle' },\n    { number: 79, group: 'Pipe', label: 'Ocarina' },\n    { number: 80, group: 'Synth Lead', label: 'Lead 1(square)' },\n    { number: 81, group: 'Synth Lead', label: 'Lead 2(sawtooth)' },\n    { number: 82, group: 'Synth Lead', label: 'Lead 3(calliope)' },\n    { number: 83, group: 'Synth Lead', label: 'Lead 4(chiff)' },\n    { number: 84, group: 'Synth Lead', label: 'Lead 5(charang)' },\n    { number: 85, group: 'Synth Lead', label: 'Lead 6(voice)' },\n    { number: 86, group: 'Synth Lead', label: 'Lead 7(fifths)' },\n    { number: 87, group: 'Synth Lead', label: 'Lead 8(bass + lead)' },\n    { number: 88, group: 'Synth Pad', label: 'Pad 1(new age)' },\n    { number: 89, group: 'Synth Pad', label: 'Pad 2(warm)' },\n    { number: 90, group: 'Synth Pad', label: 'Pad 3(polysynth)' },\n    { number: 91, group: 'Synth Pad', label: 'Pad 4(choir)' },\n    { number: 92, group: 'Synth Pad', label: 'Pad 5(bowed)' },\n    { number: 93, group: 'Synth Pad', label: 'Pad 6(metallic)' },\n    { number: 94, group: 'Synth Pad', label: 'Pad 7(halo)' },\n    { number: 95, group: 'Synth Pad', label: 'Pad 8(sweep)' },\n    { number: 96, group: 'Synth Effects', label: 'FX 1(rain)' },\n    { number: 97, group: 'Synth Effects', label: 'FX 2(soundtrack)' },\n    { number: 98, group: 'Synth Effects', label: 'FX 3(crystal)' },\n    { number: 99, group: 'Synth Effects', label: 'FX 4(atmosphere)' },\n    { number: 100, group: 'Synth Effects', label: 'FX 5(brightness)' },\n    { number: 101, group: 'Synth Effects', label: 'FX 6(goblins)' },\n    { number: 102, group: 'Synth Effects', label: 'FX 7(echoes)' },\n    { number: 103, group: 'Synth Effects', label: 'FX 8(sci-fi)' },\n    { number: 104, group: 'Ethnic', label: 'Sitar' },\n    { number: 105, group: 'Ethnic', label: 'Banjo' },\n    { number: 106, group: 'Ethnic', label: 'Shamisen' },\n    { number: 107, group: 'Ethnic', label: 'Koto' },\n    { number: 108, group: 'Ethnic', label: 'Kalimba' },\n    { number: 109, group: 'Ethnic', label: 'Bag pipe' },\n    { number: 110, group: 'Ethnic', label: 'Fiddle' },\n    { number: 111, group: 'Ethnic', label: 'Shanai' },\n    { number: 112, group: 'Percussive', label: 'Tinkle Bell' },\n    { number: 113, group: 'Percussive', label: 'Agogo' },\n    { number: 114, group: 'Percussive', label: 'Steel Drums' },\n    { number: 115, group: 'Percussive', label: 'Woodblock' },\n    { number: 116, group: 'Percussive', label: 'Taiko Drum' },\n    { number: 117, group: 'Percussive', label: 'Melodic Tom' },\n    { number: 118, group: 'Percussive', label: 'Synth Drum' },\n    { number: 119, group: 'Sound Effects', label: 'Reverse Cymbal' },\n    { number: 120, group: 'Sound Effects', label: 'Guitar Fret Noise' },\n    { number: 121, group: 'Sound Effects', label: 'Breath Noise' },\n    { number: 122, group: 'Sound Effects', label: 'Seashore' },\n    { number: 123, group: 'Sound Effects', label: 'Bird Tweet' },\n    { number: 124, group: 'Sound Effects', label: 'Telephone Ring' },\n    { number: 125, group: 'Sound Effects', label: 'Helicopter' },\n    { number: 126, group: 'Sound Effects', label: 'Applause' },\n    { number: 127, group: 'Sound Effects', label: 'Gunshot' },\n];\n\nconst MIDI_INSTRUMENTS_Lev2 = [\n    { number: 1, subnumber: 0, group: 'Piano', label: 'Acoustic Grand Piano' },\n    { number: 1, subnumber: 1, group: 'Piano', label: 'Wide Acoustic Grand' },\n    { number: 1, subnumber: 2, group: 'Piano', label: 'Dark Acoustic Grand' },\n    { number: 2, subnumber: 0, group: 'Piano', label: 'Bright Acoustic Piano' },\n    { number: 2, subnumber: 1, group: 'Piano', label: 'Wide Bright Acoustic' },\n    { number: 3, subnumber: 0, group: 'Piano', label: 'Electric Grand Piano' },\n    { number: 3, subnumber: 1, group: 'Piano', label: 'Wide Electric Grand' },\n    { number: 4, subnumber: 0, group: 'Piano', label: 'Honky-tonk Piano' },\n    { number: 4, subnumber: 1, group: 'Piano', label: 'Wide Honky-tonk' },\n    { number: 5, subnumber: 0, group: 'Piano', label: 'Rhodes Piano' },\n    { number: 5, subnumber: 1, group: 'Piano', label: 'Detuned Electric Piano 1' },\n    { number: 5, subnumber: 2, group: 'Piano', label: 'Electric Piano 1 Variation' },\n    { number: 5, subnumber: 3, group: 'Piano', label: '60\\'s Electric Piano' },\n    { number: 6, subnumber: 0, group: 'Piano', label: 'Chorused Electric Piano' },\n    { number: 6, subnumber: 1, group: 'Piano', label: 'Detuned Electric Piano 2' },\n    { number: 6, subnumber: 2, group: 'Piano', label: 'Electric Piano 2 Variation' },\n    { number: 6, subnumber: 3, group: 'Piano', label: 'Electric Piano Legend' },\n    { number: 6, subnumber: 4, group: 'Piano', label: 'Electric Piano Phase' },\n    { number: 7, subnumber: 0, group: 'Piano', label: 'Harpsichord' },\n    { number: 7, subnumber: 1, group: 'Piano', label: 'Coupled Harpsichord' },\n    { number: 7, subnumber: 2, group: 'Piano', label: 'Wide Harpsichord' },\n    { number: 7, subnumber: 3, group: 'Piano', label: 'Open Harpsichord' },\n    { number: 8, subnumber: 0, group: 'Piano', label: 'Clavinet' },\n    { number: 8, subnumber: 1, group: 'Piano', label: 'Pulse Clavinet' },\n    { number: 9, subnumber: 0, group: 'Chromatic Percussion', label: 'Celesta' },\n    { number: 10, subnumber: 0, group: 'Chromatic Percussion', label: 'Glockenspiel' },\n    { number: 11, subnumber: 0, group: 'Chromatic Percussion', label: 'Music Box' },\n    { number: 12, subnumber: 0, group: 'Chromatic Percussion', label: 'Vibraphone' },\n    { number: 12, subnumber: 1, group: 'Chromatic Percussion', label: 'Wet Vibraphone' },\n    { number: 13, subnumber: 0, group: 'Chromatic Percussion', label: 'Marimba' },\n    { number: 13, subnumber: 1, group: 'Chromatic Percussion', label: 'Wide Marimba' },\n    { number: 14, subnumber: 0, group: 'Chromatic Percussion', label: 'Xylophone' },\n    { number: 15, subnumber: 0, group: 'Chromatic Percussion', label: 'Tubular Bells' },\n    { number: 15, subnumber: 1, group: 'Chromatic Percussion', label: 'Church Bells' },\n    { number: 15, subnumber: 2, group: 'Chromatic Percussion', label: 'Carillon' },\n    { number: 16, subnumber: 0, group: 'Chromatic Percussion', label: 'Dulcimer / Santur' },\n    { number: 17, subnumber: 0, group: 'Organ', label: 'Hammond Organ' },\n    { number: 17, subnumber: 1, group: 'Organ', label: 'Detuned Organ 1' },\n    { number: 17, subnumber: 2, group: 'Organ', label: '60\\'s Organ 1' },\n    { number: 17, subnumber: 3, group: 'Organ', label: 'Organ 4' },\n    { number: 18, subnumber: 0, group: 'Organ', label: 'Percussive Organ' },\n    { number: 18, subnumber: 1, group: 'Organ', label: 'Detuned Organ 2' },\n    { number: 18, subnumber: 2, group: 'Organ', label: 'Organ 5' },\n    { number: 19, subnumber: 0, group: 'Organ', label: 'Rock Organ' },\n    { number: 20, subnumber: 0, group: 'Organ', label: 'Church Organ 1' },\n    { number: 20, subnumber: 1, group: 'Organ', label: 'Church Organ 2' },\n    { number: 20, subnumber: 2, group: 'Organ', label: 'Church Organ 3' },\n    { number: 21, subnumber: 0, group: 'Organ', label: 'Reed Organ' },\n    { number: 21, subnumber: 1, group: 'Organ', label: 'Puff Organ' },\n    { number: 22, subnumber: 0, group: 'Organ', label: 'French Accordion' },\n    { number: 22, subnumber: 1, group: 'Organ', label: 'Italian Accordion' },\n    { number: 23, subnumber: 0, group: 'Organ', label: 'Harmonica' },\n    { number: 24, subnumber: 0, group: 'Organ', label: 'Bandoneon' },\n    { number: 25, subnumber: 0, group: 'Guitar', label: 'Nylon-String Guitar' },\n    { number: 25, subnumber: 1, group: 'Guitar', label: 'Ukelele' },\n    { number: 25, subnumber: 2, group: 'Guitar', label: 'Open Nylon Guitar' },\n    { number: 25, subnumber: 3, group: 'Guitar', label: 'Nylon Guitar 2' },\n    { number: 26, subnumber: 0, group: 'Guitar', label: 'Steel-String Guitar' },\n    { number: 26, subnumber: 1, group: 'Guitar', label: '12-String Guitar' },\n    { number: 26, subnumber: 2, group: 'Guitar', label: 'Mandolin' },\n    { number: 26, subnumber: 3, group: 'Guitar', label: 'Steel + Body' },\n    { number: 27, subnumber: 0, group: 'Guitar', label: 'Jazz Guitar' },\n    { number: 27, subnumber: 1, group: 'Guitar', label: 'Hawaiian Guitar' },\n    { number: 28, subnumber: 0, group: 'Guitar', label: 'Clean Electric Guitar' },\n    { number: 28, subnumber: 1, group: 'Guitar', label: 'Chorus Guitar' },\n    { number: 28, subnumber: 2, group: 'Guitar', label: 'Mid Tone Guitar' },\n    { number: 29, subnumber: 0, group: 'Guitar', label: 'Muted Electric Guitar' },\n    { number: 29, subnumber: 1, group: 'Guitar', label: 'Funk Guitar' },\n    { number: 29, subnumber: 2, group: 'Guitar', label: 'Funk Guitar 2' },\n    { number: 29, subnumber: 3, group: 'Guitar', label: 'Jazz Man' },\n    { number: 30, subnumber: 0, group: 'Guitar', label: 'Overdriven Guitar' },\n    { number: 30, subnumber: 1, group: 'Guitar', label: 'Guitar Pinch' },\n    { number: 31, subnumber: 0, group: 'Guitar', label: 'Distortion Guitar' },\n    { number: 31, subnumber: 1, group: 'Guitar', label: 'Feedback Guitar' },\n    { number: 31, subnumber: 2, group: 'Guitar', label: 'Distortion Rtm Guitar' },\n    { number: 32, subnumber: 0, group: 'Guitar', label: 'Guitar Harmonics' },\n    { number: 32, subnumber: 1, group: 'Guitar', label: 'Guitar Feedback' },\n    { number: 33, subnumber: 0, group: 'Bass', label: 'Acoustic Bass' },\n    { number: 34, subnumber: 0, group: 'Bass', label: 'Fingered Bass' },\n    { number: 34, subnumber: 1, group: 'Bass', label: 'Finger Slap' },\n    { number: 35, subnumber: 0, group: 'Bass', label: 'Picked Bass' },\n    { number: 36, subnumber: 0, group: 'Bass', label: 'Fretless Bass' },\n    { number: 37, subnumber: 0, group: 'Bass', label: 'Slap Bass 1' },\n    { number: 38, subnumber: 0, group: 'Bass', label: 'Slap Bass 2' },\n    { number: 39, subnumber: 0, group: 'Bass', label: 'Synth Bass 1' },\n    { number: 39, subnumber: 1, group: 'Bass', label: 'Synth Bass 101' },\n    { number: 39, subnumber: 2, group: 'Bass', label: 'Synth Bass 3' },\n    { number: 39, subnumber: 3, group: 'Bass', label: 'Clavi Bass' },\n    { number: 39, subnumber: 4, group: 'Bass', label: 'Hammer' },\n    { number: 40, subnumber: 0, group: 'Bass', label: 'Synth Bass 2' },\n    { number: 40, subnumber: 1, group: 'Bass', label: 'Synth Bass 4' },\n    { number: 40, subnumber: 2, group: 'Bass', label: 'Rubber Bass' },\n    { number: 40, subnumber: 3, group: 'Bass', label: 'Attack Pulse' },\n    { number: 41, subnumber: 0, group: 'Strings', label: 'Violin' },\n    { number: 41, subnumber: 1, group: 'Strings', label: 'Slow Violin' },\n    { number: 42, subnumber: 0, group: 'Strings', label: 'Viola' },\n    { number: 43, subnumber: 0, group: 'Strings', label: 'Cello' },\n    { number: 44, subnumber: 0, group: 'Strings', label: 'Contrabass' },\n    { number: 45, subnumber: 0, group: 'Strings', label: 'Tremolo Strings' },\n    { number: 46, subnumber: 0, group: 'Strings', label: 'Pizzicato Strings' },\n    { number: 47, subnumber: 0, group: 'Strings', label: 'Harp' },\n    { number: 47, subnumber: 1, group: 'Strings', label: 'Yang Qin' },\n    { number: 48, subnumber: 0, group: 'Strings', label: 'Timpani' },\n    { number: 49, subnumber: 0, group: 'Orchestral Ensemble', label: 'String Ensemble' },\n    { number: 49, subnumber: 1, group: 'Orchestral Ensemble', label: 'Orchestra Strings' },\n    { number: 49, subnumber: 2, group: 'Orchestral Ensemble', label: '60\\'s Strings' },\n    { number: 50, subnumber: 0, group: 'Orchestral Ensemble', label: 'Slow String Ensemble' },\n    { number: 51, subnumber: 0, group: 'Orchestral Ensemble', label: 'Synth Strings 1' },\n    { number: 51, subnumber: 1, group: 'Orchestral Ensemble', label: 'Synth Strings 3' },\n    { number: 52, subnumber: 0, group: 'Orchestral Ensemble', label: 'Synth Strings 2' },\n    { number: 53, subnumber: 0, group: 'Orchestral Ensemble', label: 'Choir Aahs' },\n    { number: 53, subnumber: 1, group: 'Orchestral Ensemble', label: 'Choir Aahs 2' },\n    { number: 54, subnumber: 0, group: 'Orchestral Ensemble', label: 'Voice Oohs' },\n    { number: 54, subnumber: 1, group: 'Orchestral Ensemble', label: 'Humming' },\n    { number: 55, subnumber: 0, group: 'Orchestral Ensemble', label: 'Synth Voice' },\n    { number: 55, subnumber: 1, group: 'Orchestral Ensemble', label: 'Analog Voice' },\n    { number: 56, subnumber: 0, group: 'Orchestral Ensemble', label: 'Orchestra Hit' },\n    { number: 56, subnumber: 1, group: 'Orchestral Ensemble', label: 'Bass Hit' },\n    { number: 56, subnumber: 2, group: 'Orchestral Ensemble', label: '6th Hit' },\n    { number: 56, subnumber: 3, group: 'Orchestral Ensemble', label: 'Euro Hit' },\n    { number: 57, subnumber: 0, group: 'Brass', label: 'Trumpet' },\n    { number: 57, subnumber: 1, group: 'Brass', label: 'Dark Trumpet' },\n    { number: 58, subnumber: 0, group: 'Brass', label: 'Trombone' },\n    { number: 58, subnumber: 1, group: 'Brass', label: 'Trombone 2' },\n    { number: 58, subnumber: 2, group: 'Brass', label: 'Bright Trombone' },\n    { number: 59, subnumber: 0, group: 'Brass', label: 'Tuba' },\n    { number: 60, subnumber: 0, group: 'Brass', label: 'Muted Trumpet' },\n    { number: 60, subnumber: 1, group: 'Brass', label: 'Muted Trumpet 2' },\n    { number: 61, subnumber: 0, group: 'Brass', label: 'French Horn' },\n    { number: 61, subnumber: 1, group: 'Brass', label: 'French Horn 2' },\n    { number: 62, subnumber: 0, group: 'Brass', label: 'Brass Section' },\n    { number: 62, subnumber: 1, group: 'Brass', label: 'Brass Section' },\n    { number: 63, subnumber: 0, group: 'Brass', label: 'Synth Brass 1' },\n    { number: 63, subnumber: 1, group: 'Brass', label: 'Synth Brass 3' },\n    { number: 63, subnumber: 2, group: 'Brass', label: 'Analog Brass 1' },\n    { number: 63, subnumber: 3, group: 'Brass', label: 'Jump Brass' },\n    { number: 64, subnumber: 0, group: 'Brass', label: 'Synth Brass 2' },\n    { number: 64, subnumber: 1, group: 'Brass', label: 'Synth Brass 4' },\n    { number: 64, subnumber: 2, group: 'Brass', label: 'Analog Brass 2' },\n    { number: 65, subnumber: 0, group: 'Reed', label: 'Soprano Sax' },\n    { number: 66, subnumber: 0, group: 'Reed', label: 'Alto Sax' },\n    { number: 67, subnumber: 0, group: 'Reed', label: 'Tenor Sax' },\n    { number: 68, subnumber: 0, group: 'Reed', label: 'Baritone Sax' },\n    { number: 69, subnumber: 0, group: 'Reed', label: 'Oboe' },\n    { number: 70, subnumber: 0, group: 'Reed', label: 'English Horn' },\n    { number: 71, subnumber: 0, group: 'Reed', label: 'Bassoon' },\n    { number: 72, subnumber: 0, group: 'Reed', label: 'Clarinet' },\n    { number: 73, subnumber: 0, group: 'Wind', label: 'Piccolo' },\n    { number: 74, subnumber: 0, group: 'Wind', label: 'Flute' },\n    { number: 75, subnumber: 0, group: 'Wind', label: 'Recorder' },\n    { number: 76, subnumber: 0, group: 'Wind', label: 'Pan Flute' },\n    { number: 77, subnumber: 0, group: 'Wind', label: 'Blown Bottle' },\n    { number: 78, subnumber: 0, group: 'Wind', label: 'Shakuhachi' },\n    { number: 79, subnumber: 0, group: 'Wind', label: 'Whistle' },\n    { number: 80, subnumber: 0, group: 'Wind', label: 'Ocarina' },\n    { number: 81, subnumber: 0, group: 'Lead', label: 'Square Lead' },\n    { number: 81, subnumber: 1, group: 'Lead', label: 'Square Wave' },\n    { number: 81, subnumber: 2, group: 'Lead', label: 'Sine Wave' },\n    { number: 82, subnumber: 0, group: 'Lead', label: 'Saw Lead' },\n    { number: 82, subnumber: 1, group: 'Lead', label: 'Saw Wave' },\n    { number: 82, subnumber: 2, group: 'Lead', label: 'Doctor Solo' },\n    { number: 82, subnumber: 3, group: 'Lead', label: 'Natural Lead' },\n    { number: 82, subnumber: 4, group: 'Lead', label: 'Sequenced Saw' },\n    { number: 83, subnumber: 0, group: 'Lead', label: 'Synth Calliope' },\n    { number: 84, subnumber: 0, group: 'Lead', label: 'Chiffer Lead' },\n    { number: 85, subnumber: 0, group: 'Lead', label: 'Charang' },\n    { number: 85, subnumber: 1, group: 'Lead', label: 'Wire Lead' },\n    { number: 86, subnumber: 0, group: 'Lead', label: 'Solo Synth Vox' },\n    { number: 87, subnumber: 0, group: 'Lead', label: '5th Saw Wave' },\n    { number: 88, subnumber: 0, group: 'Lead', label: 'Bass & Lead' },\n    { number: 88, subnumber: 1, group: 'Lead', label: 'Delayed Lead' },\n    { number: 89, subnumber: 0, group: 'Synth Pad', label: 'Fantasia Pad' },\n    { number: 90, subnumber: 0, group: 'Synth Pad', label: 'Warm Pad' },\n    { number: 90, subnumber: 1, group: 'Synth Pad', label: 'Sine Pad' },\n    { number: 91, subnumber: 0, group: 'Synth Pad', label: 'Polysynth Pad' },\n    { number: 92, subnumber: 0, group: 'Synth Pad', label: 'Space Voice Pad' },\n    { number: 92, subnumber: 1, group: 'Synth Pad', label: 'Itopia' },\n    { number: 93, subnumber: 0, group: 'Synth Pad', label: 'Bowed Glass Pad' },\n    { number: 94, subnumber: 0, group: 'Synth Pad', label: 'Metal Pad' },\n    { number: 95, subnumber: 0, group: 'Synth Pad', label: 'Halo Pad' },\n    { number: 96, subnumber: 0, group: 'Synth Pad', label: 'Sweep Pad' },\n    { number: 97, subnumber: 0, group: 'Synth Effects', label: 'Ice Rain' },\n    { number: 98, subnumber: 0, group: 'Synth Effects', label: 'Soundtrack' },\n    { number: 99, subnumber: 0, group: 'Synth Effects', label: 'Crystal' },\n    { number: 99, subnumber: 1, group: 'Synth Effects', label: 'Synth Mallet' },\n    { number: 100, subnumber: 0, group: 'Synth Effects', label: 'Atmosphere' },\n    { number: 101, subnumber: 0, group: 'Synth Effects', label: 'Brightness' },\n    { number: 102, subnumber: 0, group: 'Synth Effects', label: 'Goblin' },\n    { number: 103, subnumber: 0, group: 'Synth Effects', label: 'Echo Drops' },\n    { number: 103, subnumber: 1, group: 'Synth Effects', label: 'Echo Bell' },\n    { number: 103, subnumber: 2, group: 'Synth Effects', label: 'Echo Pan' },\n    { number: 104, subnumber: 0, group: 'Synth Effects', label: 'Star Theme' },\n    { number: 105, subnumber: 0, group: 'Ethnic', label: 'Sitar' },\n    { number: 105, subnumber: 1, group: 'Ethnic', label: 'Sitar 2' },\n    { number: 106, subnumber: 0, group: 'Ethnic', label: 'Banjo' },\n    { number: 107, subnumber: 0, group: 'Ethnic', label: 'Shamisen' },\n    { number: 108, subnumber: 0, group: 'Ethnic', label: 'Koto' },\n    { number: 108, subnumber: 1, group: 'Ethnic', label: 'Taisho Koto' },\n    { number: 109, subnumber: 0, group: 'Ethnic', label: 'Kalimba' },\n    { number: 110, subnumber: 0, group: 'Ethnic', label: 'Bagpipe' },\n    { number: 111, subnumber: 0, group: 'Ethnic', label: 'Fiddle' },\n    { number: 112, subnumber: 0, group: 'Ethnic', label: 'Shanai' },\n    { number: 113, subnumber: 0, group: 'Percussive', label: 'Tinkle Bell' },\n    { number: 114, subnumber: 0, group: 'Percussive', label: 'Agogo' },\n    { number: 115, subnumber: 0, group: 'Percussive', label: 'Steel Drums' },\n    { number: 116, subnumber: 0, group: 'Percussive', label: 'Woodblock' },\n    { number: 116, subnumber: 1, group: 'Percussive', label: 'Castanets' },\n    { number: 117, subnumber: 0, group: 'Percussive', label: 'Taiko Drum' },\n    { number: 117, subnumber: 1, group: 'Percussive', label: 'Concert Bass Drum' },\n    { number: 118, subnumber: 0, group: 'Percussive', label: 'Melodic Tom 1' },\n    { number: 118, subnumber: 1, group: 'Percussive', label: 'Melodic Tom 2' },\n    { number: 119, subnumber: 0, group: 'Percussive', label: 'Synth Drum' },\n    { number: 119, subnumber: 1, group: 'Percussive', label: '808 Tom' },\n    { number: 119, subnumber: 2, group: 'Percussive', label: 'Electric Percussion' },\n    { number: 120, subnumber: 0, group: 'Percussive', label: 'Reverse Cymbal' },\n    { number: 121, subnumber: 0, group: 'Sound Effects', label: 'Guitar Fret Noise' },\n    { number: 121, subnumber: 1, group: 'Sound Effects', label: 'Guitar Cut Noise' },\n    { number: 121, subnumber: 2, group: 'Sound Effects', label: 'String Slap' },\n    { number: 122, subnumber: 0, group: 'Sound Effects', label: 'Breath Noise' },\n    { number: 122, subnumber: 1, group: 'Sound Effects', label: 'Flute Key Click' },\n    { number: 123, subnumber: 0, group: 'Sound Effects', label: 'Seashore' },\n    { number: 123, subnumber: 1, group: 'Sound Effects', label: 'Rain' },\n    { number: 123, subnumber: 2, group: 'Sound Effects', label: 'Thunder' },\n    { number: 123, subnumber: 3, group: 'Sound Effects', label: 'Wind' },\n    { number: 123, subnumber: 4, group: 'Sound Effects', label: 'Stream' },\n    { number: 123, subnumber: 5, group: 'Sound Effects', label: 'Bubble' },\n    { number: 124, subnumber: 0, group: 'Sound Effects', label: 'Bird Tweet' },\n    { number: 124, subnumber: 1, group: 'Sound Effects', label: 'Dog' },\n    { number: 124, subnumber: 2, group: 'Sound Effects', label: 'Horse Gallop' },\n    { number: 124, subnumber: 3, group: 'Sound Effects', label: 'Bird 2' },\n    { number: 125, subnumber: 0, group: 'Sound Effects', label: 'Telephone 1' },\n    { number: 125, subnumber: 1, group: 'Sound Effects', label: 'Telephone 2' },\n    { number: 125, subnumber: 2, group: 'Sound Effects', label: 'Door Creaking' },\n    { number: 125, subnumber: 3, group: 'Sound Effects', label: 'Door Closing' },\n    { number: 125, subnumber: 4, group: 'Sound Effects', label: 'Scratch' },\n    { number: 125, subnumber: 5, group: 'Sound Effects', label: 'Wind Chimes' },\n    { number: 126, subnumber: 0, group: 'Sound Effects', label: 'Helicopter' },\n    { number: 126, subnumber: 1, group: 'Sound Effects', label: 'Car Engine' },\n    { number: 126, subnumber: 2, group: 'Sound Effects', label: 'Car Stop' },\n    { number: 126, subnumber: 3, group: 'Sound Effects', label: 'Car Pass' },\n    { number: 126, subnumber: 4, group: 'Sound Effects', label: 'Car Crash' },\n    { number: 126, subnumber: 5, group: 'Sound Effects', label: 'Siren' },\n    { number: 126, subnumber: 6, group: 'Sound Effects', label: 'Train' },\n    { number: 126, subnumber: 7, group: 'Sound Effects', label: 'Jetplane' },\n    { number: 126, subnumber: 8, group: 'Sound Effects', label: 'Starship' },\n    { number: 126, subnumber: 9, group: 'Sound Effects', label: 'Burst Noise' },\n    { number: 127, subnumber: 0, group: 'Sound Effects', label: 'Applause' },\n    { number: 127, subnumber: 1, group: 'Sound Effects', label: 'Laughing' },\n    { number: 127, subnumber: 2, group: 'Sound Effects', label: 'Screaming' },\n    { number: 127, subnumber: 3, group: 'Sound Effects', label: 'Punch' },\n    { number: 127, subnumber: 4, group: 'Sound Effects', label: 'Heart Beat' },\n    { number: 127, subnumber: 5, group: 'Sound Effects', label: 'Footsteps' },\n    { number: 128, subnumber: 0, group: 'Sound Effects', label: 'Gun Shot' },\n    { number: 128, subnumber: 1, group: 'Sound Effects', label: 'Machine Gun' },\n    { number: 128, subnumber: 2, group: 'Sound Effects', label: 'Lasergun' },\n    { number: 128, subnumber: 3, group: 'Sound Effects', label: 'Explosion' }\n];\n\nconst GENERAL_MIDI_DRUM_NOTE_NUMBERS = new Map([\n    [27, 'High Q(GM2)'],\n    [28, 'Slap(GM2)'],\n    [29, 'Scratch Push(GM2)'],\n    [30, 'Scratch Pull(GM2)'],\n    [31, 'Sticks(GM2)'],\n    [32, 'Square Click(GM2)'],\n    [33, 'Metronome Click(GM2)'],\n    [34, 'Metronome Bell(GM2)'],\n    [35, 'Bass Drum 2'],\n    [36, 'Bass Drum 1'],\n    [37, 'Side Stick'],\n    [38, 'Snare Drum 1'],\n    [39, 'Hand Clap'],\n    [40, 'Snare Drum 2'],\n    [41, 'Low Tom 2'],\n    [42, 'Closed Hi-hat'],\n    [43, 'Low Tom 1'],\n    [44, 'Pedal Hi-hat'],\n    [45, 'Mid Tom 2'],\n    [46, 'Open Hi-hat'],\n    [47, 'Mid Tom 1'],\n    [48, 'High Tom 2'],\n    [49, 'Crash Cymbal 1'],\n    [50, 'High Tom 1'],\n    [51, 'Ride Cymbal 1'],\n    [52, 'Chinese Cymbal'],\n    [53, 'Ride Bell'],\n    [54, 'Tambourine'],\n    [55, 'Splash Cymbal'],\n    [56, 'Cowbell'],\n    [57, 'Crash Cymbal 2'],\n    [58, 'Vibra Slap'],\n    [59, 'Ride Cymbal 2'],\n    [60, 'High Bongo'],\n    [61, 'Low Bongo'],\n    [62, 'Mute High Conga'],\n    [63, 'Open High Conga'],\n    [64, 'Low Conga'],\n    [65, 'High Timbale'],\n    [66, 'Low Timbale'],\n    [67, 'High Agogo'],\n    [68, 'Low Agogo'],\n    [69, 'Cabasa'],\n    [70, 'Maracas'],\n    [71, 'Short Whistle'],\n    [72, 'Long Whistle'],\n    [73, 'Short Guiro'],\n    [74, 'Long Guiro'],\n    [75, 'Claves'],\n    [76, 'High Wood Block'],\n    [77, 'Low Wood Block'],\n    [78, 'Mute Cuica'],\n    [79, 'Open Cuica'],\n    [80, 'Mute Triangle'],\n    [81, 'Open Triangle'],\n    [82, 'Shaker(GM2)'],\n    [83, 'Jingle Bell(GM2)'],\n    [84, 'Belltree(GM2)'],\n    [85, 'Castanets(GM2)'],\n    [86, 'Mute Surdo(GM2)'],\n    [87, 'Open Surdo(GM2)']\n]);\n\n// TODO: This might be useful, e.g. to check which notes Player can play\n// const MIDI_NOTE_RANGES = [\n//     // Strings\n//     { instrNr: 40, nrL2: -1, subNrL2: -1, label: 'Violin', min: 55, max: 103 },\n//     { instrNr: 41, nrL2: -1, subNrL2: -1, label: 'Viola', min: 48, max: 91 },\n//     { instrNr: 42, nrL2: -1, subNrL2: -1, label: 'Cello', min: 36, max: 76 },\n//     { instrNr: -1, nrL2: -1, subNrL2: -1, label: 'Double Bass', min: 28, max: 67 },\n//     { instrNr: -1, nrL2: -1, subNrL2: -1, label: 'Bass Guitar', min: 28, max: 67 },\n//     { instrNr: -1, nrL2: -1, subNrL2: -1, label: 'Acoustic Guitar', min: 40, max: 88 },\n//     // Brass\n//     { instrNr: 58, nrL2: 59, subNrL2: 0, label: 'Tuba', min: 28, max: 58 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Trombone', min: 34, max: 67 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'French Horn', min: 34, max: 77 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Trombone', min: 40, max: 72 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Trumpet', min: 55, max: 82 },\n//     // Woodwinds\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Piccolo', min: 74, max: 102 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Flute', min: 60, max: 96 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Oboe', min: 58, max: 91 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Alto Flute', min: 55, max: 91 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Cor Anglais (English Horn)', min: 52, max: 81 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Clarinet', min: 50, max: 94 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Clarinet', min: 38, max: 77 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bassoon', min: 34, max: 75 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Contrabassoon', min: 22, max: 53 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Soprano Recorder', min: 72, max: 98 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Alto Recorder', min: 65, max: 91 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Tenor Recorder', min: 60, max: 86 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Recorder', min: 53, max: 79 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Baritone Sax', min: 36, max: 69 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Tenor Sax', min: 44, max: 76 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Alto Sax', min: 49, max: 81 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Soprano Sax', min: 56, max: 88 },\n//     // Tuned Percussion\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Glockenspiel', min: 79, max: 108 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Xylophone', min: 65, max: 108 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Vibraphone', min: 53, max: 89 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Marimba', min: 45, max: 96 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Marimba', min: 33, max: 81 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Celeste', min: 60, max: 108 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Tubular Bells', min: 60, max: 77 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Timpani', min: 40, max: 55 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Harpsichord', min: 29, max: 89 },\n//     { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Harp', min: 24, max: 103 }\n// ];\n\n// Build lookup maps\nfor (let note of MIDI_NOTES) {\n    MidiNoteByPitch.set(note.pitch, note);\n    MidiNoteByLabel.set(note.label, note);\n}\nfor (let instrument of MIDI_INSTRUMENTS) {\n    MidiInstrumentByNumber.set(instrument.number, instrument);\n}\nfor (let instrument of MIDI_INSTRUMENTS_Lev2) {\n    const key = `${instrument.number}-${instrument.subnumber}`;\n    MidiInstrumentByNumberLev2.set(key, instrument);\n}\n","import React from 'react';\nimport { scaleLinear } from 'd3-scale';\nimport { extent, group } from 'd3-array';\nimport { axisBottom, axisLeft } from 'd3-axis';\nimport { select } from 'd3-selection';\nimport View from '../lib/ui/View';\nimport { schemeCategory10 } from 'd3-scale-chromatic';\nimport { drawNoteTrapezoid, setupCanvas, clipLeftRight } from '../lib/ui/Graphics';\nimport { getMidiNoteByNr } from '../lib/Midi';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faToggleOn, faToggleOff } from '@fortawesome/free-solid-svg-icons';\n\n\nexport default class PitchTimeChart extends View {\n\n    constructor(props) {\n        const margin = { top: 45, right: 30, bottom: 60, left: 65 };\n        super(props, margin);\n        this.state = {\n            ...this.state,\n            overviewHeight: 40,\n            showAllTime: false,\n            // pitch, note, drums\n            yAxisLabelType: 'pitch',\n            boxHeight: null,\n            notes: [],\n            liveNotes: [],\n        };\n    }\n\n    componentDidMount = () => this.initialize();\n\n    onResize = () => this.initialize();\n\n    componentDidUpdate() {\n        this.resizeComponent();\n        // TODO: check if GT and rec have changed, if not only draw player time\n        // if (this.state.initialized) {\n        //     this.draw(this);\n        // }\n    }\n\n    initialize = () => {\n        const { width, height, yAxisLabelType } = this.state;\n        const overviewHeight = height * 0.25;\n        const svg = select(this.svg);\n        svg.selectAll('*').remove();\n        // Scales\n        const x = scaleLinear().range([2, width]);\n        const xOv = scaleLinear().range([2, width]);\n        const y = scaleLinear().range([height, overviewHeight + 25]);\n        const yOv = scaleLinear().range([overviewHeight, 0]);\n        // Axes\n        const xAxis = axisBottom(x);\n        // TODO: allow to switch between MIDI nr and note name and drum label\n        const yAxis = axisLeft(y);\n        if (yAxisLabelType === 'note') {\n            yAxis.tickFormat(d => getMidiNoteByNr(d)?.label);\n        } else {\n            yAxis.tickFormat(d => Math.floor(d));\n        }\n        const xAxisEl = svg.append('g')\n            .attr('class', 'axis')\n            .attr('transform', `translate(0, ${height})`)\n            .call(xAxis);\n        const yAxisEl = svg.append('g')\n            .attr('class', 'axis')\n            .call(yAxis);\n        // Labels\n        svg.append('text')\n            .attr('class', 'yAxisLabel')\n            .text('Pitch')\n            .attr('transform', `rotate(90) translate(${(height + overviewHeight) / 2}, ${45})`);\n        // Setup canvas rescaled to device pixel ratio\n        setupCanvas(this.canvas);\n        this.setState(\n            { initialized: true, svg, x, xOv, y, yOv, xAxis, yAxis, xAxisEl, yAxisEl, overviewHeight },\n            () => this.draw(this, 0)\n        );\n    }\n\n    /**\n     * Draws the note retangles.\n     * @param {CanvasRenderingContext2D} ctx canvas rendering context\n     * @param {Notes[]} notes notes with start, end, pitch\n     * @param {number} boxHeight height of each pitch-line\n     * @param {Function} x D3 linearScale x scale\n     * @param {Function} y D3 linearScale y scale\n     */\n    drawNotes = (ctx, notes, boxHeight, x, y, end) => {\n        const { width, margin } = this.state;\n        const veloScale = scaleLinear()\n            .domain([0, 127])\n            .range([boxHeight * 0.1, boxHeight]);\n        for (let note of notes) {\n            const startPos = x(note.start);\n            const noteEnd = note.end === null ? end : note.end;\n            const endPos = x(noteEnd);\n            // Do not draw invisible notes\n            if (endPos < 0 || startPos > width) {\n                continue;\n            }\n            const xPos = margin.left + startPos;\n            const h = veloScale(note.velocity);\n            const yPos = margin.top + y(note.pitch) - h / 2;\n            const w = Math.max(endPos - startPos, 1);\n            drawNoteTrapezoid(ctx, xPos, yPos, w, h, h / 2);\n        }\n    }\n\n    /**\n     * Main drawing function\n     */\n    draw = (_this, time) => {\n        const { viewWidth, viewHeight, margin, width, height, overviewHeight, x, xOv, y, yOv, xAxis, yAxis, xAxisEl, yAxisEl, showAllTime } = _this.state;\n        const { midiLiveData } = _this.props;\n        const allNotes = midiLiveData;\n        // Prepare main and highlight canvas\n        const ctx = _this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, viewWidth, viewHeight);\n        // Set x scale domain\n        const end = time / 1000;\n        const xDomain = [0, end];\n        xOv.domain(xDomain);\n        if (showAllTime) {\n            // Show all notes\n            x.domain(xDomain);\n        } else {\n            x.domain([end - 20, end]);\n        }\n        xAxisEl.call(xAxis);\n        // Set y scale domain\n        const [low, high] = extent(allNotes, d => d.pitch);\n        y.domain([+low - 1, +high + 1]);\n        yOv.domain([+low - 1, +high + 1]);\n        yAxisEl.call(yAxis);\n        // If only one track, use color for channels\n        // and allow to only show a single channel\n        const separatedByChannels = Array.from(group(allNotes, d => d.channel)).map(d => d[1]);\n        // Draw notes onto canvas\n        const colors = schemeCategory10;\n        const boxHeight = height / (high - low + 3);\n        const boxHeight2 = overviewHeight / (high - low + 1);\n        separatedByChannels.forEach((tr, i) => {\n            ctx.fillStyle = colors[i % colors.length];\n            _this.drawNotes(ctx, tr, boxHeight, x, y, end);\n            _this.drawNotes(ctx, tr, boxHeight2, xOv, yOv, end);\n        });\n        // Separator between overview and main visualization\n        ctx.fillStyle = '#888';\n        ctx.fillRect(margin.left, margin.top + overviewHeight + 12, width, 1);\n        clipLeftRight(ctx, margin, width, height);\n        requestAnimationFrame((time) => this.draw(this, time))\n    }\n\n    render() {\n        const { viewWidth, viewHeight, margin } = this.state;\n        return (\n            <div\n                className='View PitchTimeChart'\n                style={{ gridArea: `span ${this.state.rowSpan} / span ${this.state.columnSpan}` }}\n            >\n                <canvas\n                    className='ViewCanvas'\n                    ref={n => this.canvas = n}\n                    style={{ width: viewWidth, height: viewHeight }}\n                />\n                <svg\n                    width={viewWidth}\n                    height={viewHeight}\n                >\n                    <text\n                        className='heading'\n                        x={viewWidth / 2}\n                        y={20}\n                    >\n                        Note-Time Chart for WebMIDI\n                    </text>\n                    <g\n                        ref={n => this.svg = n}\n                        transform={`translate(${margin.left}, ${margin.top})`}\n                    />\n                    <text\n                        className='yAxisLabel'\n                        x={viewWidth / 2}\n                        y={viewHeight - 15}\n                    >\n                        Time in seconds\n                    </text>\n                </svg>\n                <div className='viewControls'>\n                    <div>\n                        <select\n                            title='Y-axis labels'\n                            onChange={(e) => this.setState({ yAxisLabelType: e.target.value }, this.initialize)}\n                        >\n                            <option value='pitch'>MIDI note</option>\n                            <option value='note'>Note name</option>\n                        </select>\n                    </div>\n                    <div>\n                        <button\n                            title='Toggles between showing the whole time or last 20 seconds'\n                            onClick={() => this.setState({ showAllTime: !this.state.showAllTime })}\n                        >\n                            <FontAwesomeIcon icon={this.state.showAllTime ? faToggleOn : faToggleOff} />&nbsp;\n                        Show whole time\n                    </button>\n                    </div>\n                    <div>\n                        {this.props.midiLiveData.length} notes\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import { getMidiNoteByNr } from \"../lib/Midi\";\n\n/**\n * Note class that reflects MIDI properties but has\n * absolute start and end times in seconds.\n */\nexport default class Note {\n    /**\n     * Creates a new Note\n     * @param {number} pitch pitch\n     * @param {number} start start time in seconds\n     * @param {number} velocity velocity\n     * @param {number} channel MIDI channel\n     * @param {number} end end time in seconds\n     */\n    constructor(\n        pitch,\n        start = 0,\n        velocity = 127,\n        channel = 0,\n        end = null\n    ) {\n        this.pitch = pitch;\n        this.start = start;\n        this.velocity = velocity;\n        this.channel = channel;\n        this.end = end;\n    }\n\n    /**\n     * Creates a Note object from an object via destructuring\n     * @param {Object} object object with at least {pitch}\n     * @returns {Note} new note\n     */\n    static from(object) {\n        const {\n            pitch,\n            start = 0,\n            velocity = 127,\n            channel = 0,\n            end = null\n        } = object;\n        if (pitch === undefined) {\n            console.error('Cannot create Note with undefined pitch');\n            return null;\n        }\n        return new Note(pitch, start, velocity, channel, end);\n    }\n\n    /**\n     * Returns a copy of the Note object\n     * @returns {Note} new note\n     */\n    clone() {\n        return new Note(\n            this.pitch,\n            this.start,\n            this.velocity,\n            this.channel,\n            this.end\n        );\n    }\n\n    /**\n     * Returns the duration of this note in seconds\n     * @returns {number} note duration\n     */\n    getDuration() {\n        if (this.end === null) {\n            return 0;\n        }\n        return this.end - this.start;\n    }\n\n    /**\n     * Returns the note's name and octave, e.g. 'C#3'\n     * @returns {string} note name as string\n     */\n    getName() {\n        return getMidiNoteByNr(this.pitch).label;\n    }\n\n    /**\n     * Returns the note's name WITHOUT the octave, e.g. 'C#'\n     * @returns {string} note name as string\n     */\n    getLetter() {\n        return getMidiNoteByNr(this.pitch).name;\n    }\n\n    /**\n     * Returns the note's octave.\n     * @returns {number} the note's octave\n     */\n    getOctave() {\n        return getMidiNoteByNr(this.pitch).octave;\n    }\n\n    /**\n     * Returns a new Note where start and end are multiplied by factor\n     * @param {number} addedSeconds seconds to be added to start and end\n     * @returns {Note} new note\n     */\n    shiftTime(addedSeconds) {\n        const n = this.clone();\n        n.start += addedSeconds;\n        n.end = n.end === null ? null : n.end + addedSeconds;\n        return n;\n    }\n\n    /**\n     * Returns a new Note where start and end are multiplied by factor\n     * @param {number} factor factor to scale start and end with\n     * @returns {Note} new note\n     */\n    scaleTime(factor) {\n        const n = this.clone();\n        n.start *= factor;\n        n.end = n.end === null ? null : n.end * factor;\n        return n;\n    }\n\n    /**\n     * Returns true if this note and otherNote have equal attributes.\n     * @param {Note} otherNote another Note\n     * @returns {boolen} true if equal\n     */\n    equals(otherNote) {\n        if (!otherNote instanceof Note) {\n            return false;\n        }\n        return (\n            this.pitch === otherNote.pitch &&\n            this.start === otherNote.start &&\n            this.velocity === otherNote.velocity &&\n            this.channel === otherNote.channel &&\n            this.end === otherNote.end\n        );\n    }\n}\n","import Note from '../types/Note';\n\n/**\n * Handles incoming MIDI messages from a MIDI device.\n */\nexport default class MidiInputManager {\n\n    #getMidiLiveData;\n    #setMidiLiveData;\n    #addCurrentNote;\n    #removeCurrentNote;\n\n    /**\n     * Constructor with callback functions\n     * @param {Function} getMidiLiveData a function called by this object to get\n     *      the currently recorded MIDI notes from App.js, where the\n     *      MidiInputManager instance should be created\n     *      Example for how to defined getMidiLiveData as method in App.js:\n     *          getMidiLiveData = () => this.state.midiLiveData;\n     * @param {Function} setMidiLiveData a function called by this object to\n     *      update the currently MIDI notes in App.js\n     *      Example:\n     *          setMidiLiveData = (data) => {\n     *              // Work-around so note_off event handling can\n     *              // immediately find the note_on event\n     *              this.state.midiLiveData = data;\n     *              this.setState({ midiLiveData: data });\n     *          };\n     * @param {Function} addCurrentNote a function called by this object to add\n     *      a currently played note (e.g. currently pressed piano key)\n     *      Example:\n     *          addCurrentNote = (note) => {\n     *              const newMap = new Map(this.state.currentNotes).set(note.pitch, note);\n     *              this.setState({ currentNotes: newMap });\n     *          }\n     * @param {Function} removeCurrentNote a function called by this object to\n     *      remove a currently played note\n     *      Example:\n     *          removeCurrentNote = (pitch) => {\n     *              const newMap = new Map(this.state.currentNotes).delete(pitch);\n     *              this.setState({ currentNotes: newMap });\n     *          }\n     */\n    constructor(\n        getMidiLiveData,\n        setMidiLiveData,\n        addCurrentNote = () => { },\n        removeCurrentNote = () => { }\n    ) {\n        this.#getMidiLiveData = getMidiLiveData;\n        this.#setMidiLiveData = setMidiLiveData;\n        this.#addCurrentNote = addCurrentNote;\n        this.#removeCurrentNote = removeCurrentNote;\n        // Request MIDI access\n        if (navigator.requestMIDIAccess) {\n            navigator.requestMIDIAccess().then(this._onMIDISuccess, this._onMIDIFailure);\n        } else {\n            console.error('[MidiInput] WebMIDI is not supported in this browser.');\n            alert('You browser does not support WebMIDI');\n        }\n    }\n\n    /**\n     * Handles a successful MIDI access request\n     * @param {*} midiAccess MIDI access\n     */\n    _onMIDISuccess = (midiAccess) => {\n        // console.log(midiAccess);\n        console.groupCollapsed(`[MidiInput] ${midiAccess.inputs.size} input devices`);\n        for (let input of midiAccess.inputs.values()) {\n            console.log(` - ${input.name}`);\n            input.onmidimessage = this._handleMIDIMessage;\n        }\n        console.groupEnd();\n        // console.groupCollapsed(`[MidiInput] ${midiAccess.inputs.size} output devices`);\n        // for (let output of midiAccess.outputs.values()) {\n        //     console.log(` - ${output.name}`);\n        // }\n        // console.groupEnd();\n    }\n\n    /**\n     * Handles MIDI access errors\n     * @param {*} error\n     */\n    _onMIDIFailure(error) {\n        console.error('[MidiInput] Cannot access MIDI devices.', error);\n    }\n\n    /**\n     * Handles incoming MIDI messages\n     * @param {*} message MIDI message\n     */\n    _handleMIDIMessage = (message) => {\n        // console.log(message);\n        const device = message.target.name;\n        const commandAndChannel = message.data[0];\n        const channel = commandAndChannel % 16;\n        const command = commandAndChannel - channel;\n        const time = message.timeStamp;\n        const pitch = message.data[1];\n        // A velocity value might not be included with a noteOff command\n        const velocity = (message.data.length > 2) ? message.data[2] : 0;\n        switch (command) {\n            case 128:\n                this._noteOff(device, time, pitch, channel);\n                break;\n            case 144:\n                if (velocity > 0) {\n                    this._noteOn(device, time, pitch, channel, velocity);\n                } else {\n                    this._noteOff(device, time, pitch, channel);\n                }\n                break;\n            case 224:\n                // TODO: handle pitch wheel?\n                break;\n            default:\n            // TODO: handle other commands?\n        }\n    }\n\n    /**\n     * Handles note-on messages\n     * @param {string} device device name\n     * @param {number} time time stamp of the message\n     * @param {number} pitch MIDI pitch in [0, 127]\n     * @param {number} channel MIDI channel\n     * @param {number} velocity MIDI velocity\n     */\n    _noteOn(device, time, pitch, channel, velocity) {\n        const note = new Note(pitch, time / 1000, velocity, channel);\n        // Add current note\n        this.#addCurrentNote(note);\n        // Update recorded MIDI data\n        // TODO: probably better to only update on note-off,\n        // Then we need internal cache\n        // But this might be good, since only 'unfinished' notes need to be checked on note-off,\n        // so we can remove finished notes from the cache\n        let midiData = this.#getMidiLiveData();\n        midiData = midiData.concat([note]);\n        this.#setMidiLiveData(midiData);\n    }\n\n    /**\n     * Handles note-off messages by updating the end time of the corresponding\n     * note\n     * @param {string} device device name\n     * @param {number} time time stamp of the message\n     * @param {number} pitch MIDI pitch in [0, 127]\n     * @param {number} channel MIDI channel\n     */\n    _noteOff(device, time, pitch, channel) {\n        const midiData = this.#getMidiLiveData();\n        if (midiData.length === 0) {\n            // If we have to wait for the setState to process, try again\n            setTimeout(() => this._noteOff(time, pitch), 10);\n        }\n        // Go back to latest note with the same pitch and channel and add the end time\n        let index = midiData.length - 1;\n        // TODO: if there are multiple instruments or channels, check also for those\n        while (midiData[index].pitch !== pitch || midiData[index].channel !== channel || midiData[index].end !== null) {\n            index--;\n            if (index < 0) {\n                console.warn('[MidiInput] Did not find note-on event for note-off event!');\n                break;\n            }\n        }\n        if (index >= 0) {\n            // Note successfully found, update data\n            midiData[index].end = time / 1000;\n        }\n        this.#setMidiLiveData(midiData);\n        this.#removeCurrentNote(pitch);\n    }\n}\n","import React, { Component } from 'react';\nimport './style/App.css';\n// Views\nimport PitchTimeChart from './components/PitchTimeChart';\n// API, data etc.\nimport MidiInputManager from './lib/MidiInputManager';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nexport default class App extends Component {\n\n    constructor(props) {\n        super(props);\n        // Setup MIDI input\n        new MidiInputManager(\n            this.getMidiLiveData,\n            this.setMidiLiveData,\n            this.addCurrentNote,\n            this.removeCurrentNote\n        );\n        this.state = {\n            viewSize: {\n                outerWidth: 800,\n                outerHeight: 600\n            },\n            midiLiveData: []\n        };\n    }\n\n    componentDidMount() {\n        // Scale layout to current screen size\n        window.addEventListener('resize', this.onResize, false);\n        this.onResize();\n    }\n\n    /**\n     * Updates the size state when the window size changes\n     * so views can react and redraw\n     */\n    onResize = () => {\n        this.setState({\n            viewSize: {\n                outerWidth: Math.floor(window.innerWidth - 20),\n                outerHeight: Math.floor(window.innerHeight - 100)\n            }\n        });\n    }\n\n    getMidiLiveData = () => this.state.midiLiveData;\n\n    /**\n     * Setter for MIDI input from an instrumetn\n     * @param {Note[]} data array with notes\n     */\n    setMidiLiveData = (data) => {\n        // Work-around so note_off event handling can immediately find the note_on event\n        // eslint-disable-next-line\n        this.state.midiLiveData = data;\n        this.setState({ midiLiveData: data });\n    };\n\n    /**\n     * Adds a note that is currently played (e.g. keyboard key pressed)\n     * @param {Note} note a note\n     */\n    addCurrentNote = (note) => {\n        const newMap = new Map(this.state.currentNotes);\n        newMap.set(note.pitch, note);\n        this.setState({ currentNotes: newMap });\n    }\n\n    /**\n     * Removes a currently played note (e.g. keyboard key no longer pressed)\n     * @param {number} pitch pitch of the note to remove\n     */\n    removeCurrentNote = (pitch) => {\n        const newMap = new Map(this.state.currentNotes);\n        newMap.delete(pitch);\n        this.setState({ currentNotes: newMap });\n    }\n\n    render() {\n        const s = this.state;\n        return (\n            <div className={`App dark`} >\n                <PitchTimeChart\n                    name='Note-Time Chart'\n                    viewSize={s.viewSize}\n                    midiLiveData={s.midiLiveData}\n                />\n                <div className='githubLink'>\n                    <a href='https://github.com/fheyen/midi-live-vis'>\n                        <FontAwesomeIcon icon={faGithub} />&nbsp;\n                        https://github.com/fheyen/midi-live-vis\n                    </a>\n                </div>\n            </div >\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}